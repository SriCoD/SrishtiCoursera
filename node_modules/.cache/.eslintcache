[{"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\index.js":"1","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\App.js":"2","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\reducer\\index.js":"3","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\constants.js":"4","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Signup.jsx":"5","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Login.jsx":"6","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\ForgotPassword.jsx":"7","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Home.jsx":"8","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\VerifyEmail.jsx":"9","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\UpdatePassword.jsx":"10","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Contact.jsx":"11","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\About.jsx":"12","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Dashboard.jsx":"13","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Error.jsx":"14","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Catalog.jsx":"15","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\ViewCourse.jsx":"16","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\CourseDetails.jsx":"17","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Navbar.jsx":"18","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\OpenRoute.jsx":"19","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\PrivateRoute.jsx":"20","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\MyProfile.jsx":"21","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\EnrolledCourses.jsx":"22","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\MyCourses.jsx":"23","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorDashboard\\Instructor.jsx":"24","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\VideoDetails.jsx":"25","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\ReviewSlider.jsx":"26","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Footer.jsx":"27","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\Template.jsx":"28","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\EditCourse\\index.js":"29","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Sidebar.jsx":"30","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\CourseReviewModal.jsx":"31","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\VideoDetailsSidebar.jsx":"32","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\authSlice.js":"33","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\profileSlice.js":"34","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\cartSlice.js":"35","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\courseSlice.js":"36","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\viewCourseSlice.js":"37","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\avgRating.js":"38","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\index.jsx":"39","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\index.jsx":"40","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\index.jsx":"41","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\ConfirmationModal.jsx":"42","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\RatingStars.jsx":"43","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\apiconnector.js":"44","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\courseDetailsAPI.js":"45","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\apis.js":"46","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\pageAndComponentData.js":"47","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\authAPI.js":"48","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\LearningGrid.jsx":"49","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\studentFeaturesAPI.js":"50","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\Quote.jsx":"51","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\formatDate.js":"52","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\Stats.jsx":"53","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\ContactFormSection.jsx":"54","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\Button.jsx":"55","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\CodeBlocks.jsx":"56","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\HighlightText.jsx":"57","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\InstructorSection.jsx":"58","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\ExploreMore.jsx":"59","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\LearningLanguageSection.jsx":"60","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\TimelineSection.jsx":"61","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactDetails.jsx":"62","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Catalog\\Course_Card.jsx":"63","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseDetailsCard.js":"64","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseAccordionBar.jsx":"65","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactForm.jsx":"66","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Catalog\\CourseSlider.jsx":"67","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\profileAPI.js":"68","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\dateFormatter.js":"69","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\ProfileDropDown.jsx":"70","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\IconBtn.jsx":"71","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorDashboard\\InstructorChart.jsx":"72","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\navbar-links.js":"73","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\footer-links.js":"74","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\dashboard-links.js":"75","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorCourses\\CoursesTable.jsx":"76","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\SignupForm.jsx":"77","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\SidebarLink.jsx":"78","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\LoginForm.jsx":"79","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\RenderSteps.jsx":"80","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\homepage-explore.js":"81","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\RenderTotalAmount.jsx":"82","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\RenderCartCourses.jsx":"83","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\ChangeProfilePicture.jsx":"84","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\EditProfile.jsx":"85","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\DeleteAccount.jsx":"86","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\UpdatePassword.jsx":"87","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactUsForm.jsx":"88","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\CourseCard.jsx":"89","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseSubSectionAccordion.jsx":"90","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\hooks\\useOnClickOutside.js":"91","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Tab.jsx":"92","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\SettingsAPI.js":"93","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\CourseBuilderForm.jsx":"94","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\CourseInformationForm.jsx":"95","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\PublishCourse\\index.jsx":"96","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\NestedView.jsx":"97","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\Upload.jsx":"98","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\ChipInput.jsx":"99","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\RequirementField.jsx":"100","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\SubSectionModal.jsx":"101"},{"size":679,"mtime":1716172932298,"results":"102","hashOfConfig":"103"},{"size":4571,"mtime":1716172932099,"results":"104","hashOfConfig":"103"},{"size":523,"mtime":1716172932322,"results":"105","hashOfConfig":"103"},{"size":186,"mtime":1716172932341,"results":"106","hashOfConfig":"103"},{"size":455,"mtime":1716172932317,"results":"107","hashOfConfig":"103"},{"size":401,"mtime":1716172932316,"results":"108","hashOfConfig":"103"},{"size":2634,"mtime":1716172932314,"results":"109","hashOfConfig":"103"},{"size":7950,"mtime":1716172932315,"results":"110","hashOfConfig":"103"},{"size":3490,"mtime":1716172932319,"results":"111","hashOfConfig":"103"},{"size":4392,"mtime":1716172932318,"results":"112","hashOfConfig":"103"},{"size":1110,"mtime":1716172932302,"results":"113","hashOfConfig":"103"},{"size":6585,"mtime":1716172932300,"results":"114","hashOfConfig":"103"},{"size":849,"mtime":1716172932305,"results":"115","hashOfConfig":"103"},{"size":213,"mtime":1716172932307,"results":"116","hashOfConfig":"103"},{"size":5282,"mtime":1716172932301,"results":"117","hashOfConfig":"103"},{"size":1867,"mtime":1716172932320,"results":"118","hashOfConfig":"103"},{"size":10044,"mtime":1716172932303,"results":"119","hashOfConfig":"103"},{"size":6287,"mtime":1716172932202,"results":"120","hashOfConfig":"103"},{"size":396,"mtime":1716172932217,"results":"121","hashOfConfig":"103"},{"size":355,"mtime":1716172932218,"results":"122","hashOfConfig":"103"},{"size":4511,"mtime":1716172932261,"results":"123","hashOfConfig":"103"},{"size":3504,"mtime":1716172932252,"results":"124","hashOfConfig":"103"},{"size":1268,"mtime":1716172932259,"results":"125","hashOfConfig":"103"},{"size":5802,"mtime":1716172932257,"results":"126","hashOfConfig":"103"},{"size":8353,"mtime":1716172932285,"results":"127","hashOfConfig":"103"},{"size":3736,"mtime":1716172932206,"results":"128","hashOfConfig":"103"},{"size":6886,"mtime":1716172932199,"results":"129","hashOfConfig":"103"},{"size":1834,"mtime":1716172932221,"results":"130","hashOfConfig":"103"},{"size":1620,"mtime":1716172932250,"results":"131","hashOfConfig":"103"},{"size":2611,"mtime":1716172932269,"results":"132","hashOfConfig":"103"},{"size":4082,"mtime":1716172932284,"results":"133","hashOfConfig":"103"},{"size":5198,"mtime":1716172932287,"results":"134","hashOfConfig":"103"},{"size":668,"mtime":1716172932335,"results":"135","hashOfConfig":"103"},{"size":588,"mtime":1716172932338,"results":"136","hashOfConfig":"103"},{"size":2434,"mtime":1716172932336,"results":"137","hashOfConfig":"103"},{"size":891,"mtime":1716172932337,"results":"138","hashOfConfig":"103"},{"size":1050,"mtime":1716172932339,"results":"139","hashOfConfig":"103"},{"size":404,"mtime":1716172932340,"results":"140","hashOfConfig":"103"},{"size":849,"mtime":1716172932248,"results":"141","hashOfConfig":"103"},{"size":1551,"mtime":1716172932244,"results":"142","hashOfConfig":"103"},{"size":591,"mtime":1716172932267,"results":"143","hashOfConfig":"103"},{"size":1036,"mtime":1716172932198,"results":"144","hashOfConfig":"103"},{"size":1098,"mtime":1716172932205,"results":"145","hashOfConfig":"103"},{"size":371,"mtime":1716172932324,"results":"146","hashOfConfig":"103"},{"size":11960,"mtime":1716172932330,"results":"147","hashOfConfig":"103"},{"size":2741,"mtime":1716172932325,"results":"148","hashOfConfig":"103"},{"size":770,"mtime":1716172932331,"results":"149","hashOfConfig":"103"},{"size":4920,"mtime":1716172932329,"results":"150","hashOfConfig":"103"},{"size":3124,"mtime":1716172932211,"results":"151","hashOfConfig":"103"},{"size":4182,"mtime":1716172932333,"results":"152","hashOfConfig":"103"},{"size":833,"mtime":1716172932212,"results":"153","hashOfConfig":"103"},{"size":511,"mtime":1716172932326,"results":"154","hashOfConfig":"103"},{"size":1028,"mtime":1716172932213,"results":"155","hashOfConfig":"103"},{"size":524,"mtime":1716172932210,"results":"156","hashOfConfig":"103"},{"size":547,"mtime":1716172932273,"results":"157","hashOfConfig":"103"},{"size":2242,"mtime":1716172932274,"results":"158","hashOfConfig":"103"},{"size":283,"mtime":1716172932278,"results":"159","hashOfConfig":"103"},{"size":1505,"mtime":1716172932279,"results":"160","hashOfConfig":"103"},{"size":2666,"mtime":1716172932277,"results":"161","hashOfConfig":"103"},{"size":1855,"mtime":1716172932281,"results":"162","hashOfConfig":"103"},{"size":3341,"mtime":1716172932282,"results":"163","hashOfConfig":"103"},{"size":1544,"mtime":1716172932188,"results":"164","hashOfConfig":"103"},{"size":1601,"mtime":1716172932224,"results":"165","hashOfConfig":"103"},{"size":3905,"mtime":1716172932226,"results":"166","hashOfConfig":"103"},{"size":2015,"mtime":1716172932225,"results":"167","hashOfConfig":"103"},{"size":616,"mtime":1716172932189,"results":"168","hashOfConfig":"103"},{"size":1009,"mtime":1716172932222,"results":"169","hashOfConfig":"103"},{"size":2783,"mtime":1716172932332,"results":"170","hashOfConfig":"103"},{"size":179,"mtime":1716172932342,"results":"171","hashOfConfig":"103"},{"size":2174,"mtime":1716172932219,"results":"172","hashOfConfig":"103"},{"size":718,"mtime":1716172932200,"results":"173","hashOfConfig":"103"},{"size":2765,"mtime":1716172932258,"results":"174","hashOfConfig":"103"},{"size":257,"mtime":1716172932294,"results":"175","hashOfConfig":"103"},{"size":2193,"mtime":1716172932291,"results":"176","hashOfConfig":"103"},{"size":916,"mtime":1716172932290,"results":"177","hashOfConfig":"103"},{"size":6769,"mtime":1716172932255,"results":"178","hashOfConfig":"103"},{"size":6987,"mtime":1716172932220,"results":"179","hashOfConfig":"103"},{"size":1185,"mtime":1716172932270,"results":"180","hashOfConfig":"103"},{"size":2942,"mtime":1716172932215,"results":"181","hashOfConfig":"103"},{"size":2672,"mtime":1716172932242,"results":"182","hashOfConfig":"103"},{"size":4859,"mtime":1716172932292,"results":"183","hashOfConfig":"103"},{"size":1103,"mtime":1716172932247,"results":"184","hashOfConfig":"103"},{"size":2535,"mtime":1716172932246,"results":"185","hashOfConfig":"103"},{"size":3121,"mtime":1716172932262,"results":"186","hashOfConfig":"103"},{"size":7237,"mtime":1716172932266,"results":"187","hashOfConfig":"103"},{"size":1659,"mtime":1716172932263,"results":"188","hashOfConfig":"103"},{"size":4138,"mtime":1716172932266,"results":"189","hashOfConfig":"103"},{"size":5625,"mtime":1716172932196,"results":"190","hashOfConfig":"103"},{"size":1550,"mtime":1716172932275,"results":"191","hashOfConfig":"103"},{"size":543,"mtime":1716172932228,"results":"192","hashOfConfig":"103"},{"size":1149,"mtime":1716172932295,"results":"193","hashOfConfig":"103"},{"size":745,"mtime":1716172932207,"results":"194","hashOfConfig":"103"},{"size":3670,"mtime":1716172932328,"results":"195","hashOfConfig":"103"},{"size":4757,"mtime":1716172932231,"results":"196","hashOfConfig":"103"},{"size":11394,"mtime":1716172932237,"results":"197","hashOfConfig":"103"},{"size":3347,"mtime":1716172932240,"results":"198","hashOfConfig":"103"},{"size":7075,"mtime":1716172932232,"results":"199","hashOfConfig":"103"},{"size":3941,"mtime":1716172932243,"results":"200","hashOfConfig":"103"},{"size":3528,"mtime":1716172932236,"results":"201","hashOfConfig":"103"},{"size":2573,"mtime":1716172932238,"results":"202","hashOfConfig":"103"},{"size":7155,"mtime":1716172932234,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vfgtuo",{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445"},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","suppressedMessages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508"},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","suppressedMessages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\index.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\App.js",["526","527"],[],"import \"./App.css\";\r\nimport {Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\"\r\nimport Navbar from \"./components/common/Navbar\"\r\nimport OpenRoute from \"./components/core/Auth/OpenRoute\"\r\n\r\nimport Login from \"./pages/Login\"\r\nimport Signup from \"./pages/Signup\"\r\nimport ForgotPassword from \"./pages/ForgotPassword\";\r\nimport UpdatePassword from \"./pages/UpdatePassword\";\r\nimport VerifyEmail from \"./pages/VerifyEmail\";\r\nimport About from \"./pages/About\";\r\nimport Contact from \"./pages/Contact\";\r\nimport MyProfile from \"./components/core/Dashboard/MyProfile\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport PrivateRoute from \"./components/core/Auth/PrivateRoute\";\r\nimport Error from \"./pages/Error\"\r\nimport Settings from \"./components/core/Dashboard/Settings\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EnrolledCourses from \"./components/core/Dashboard/EnrolledCourses\";\r\nimport Cart from \"./components/core/Dashboard/Cart\";\r\nimport { ACCOUNT_TYPE } from \"./utils/constants\";\r\nimport AddCourse from \"./components/core/Dashboard/AddCourse\";\r\nimport MyCourses from \"./components/core/Dashboard/MyCourses\";\r\nimport EditCourse from \"./components/core/Dashboard/EditCourse\";\r\nimport Catalog from \"./pages/Catalog\";\r\nimport CourseDetails from \"./pages/CourseDetails\";\r\nimport ViewCourse from \"./pages/ViewCourse\";\r\nimport VideoDetails from \"./components/core/ViewCourse/VideoDetails\";\r\nimport Instructor from \"./components/core/Dashboard/InstructorDashboard/Instructor\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  \r\n  const { user } = useSelector((state) => state.profile)\r\n\r\n\r\n  return (\r\n   <div className=\"w-screen min-h-screen bg-richblack-900 flex flex-col font-inter\">\r\n    <Navbar/>\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home/>} />\r\n      <Route path=\"catalog/:catalogName\" element={<Catalog/>} />\r\n      <Route path=\"courses/:courseId\" element={<CourseDetails/>} />\r\n      \r\n      <Route\r\n          path=\"signup\"\r\n          element={\r\n            <OpenRoute>\r\n              <Signup />\r\n            </OpenRoute>\r\n          }\r\n        />\r\n    <Route\r\n          path=\"login\"\r\n          element={\r\n            <OpenRoute>\r\n              <Login />\r\n            </OpenRoute>\r\n          }\r\n        />\r\n\r\n    <Route\r\n          path=\"forgot-password\"\r\n          element={\r\n            <OpenRoute>\r\n              <ForgotPassword />\r\n            </OpenRoute>\r\n          }\r\n        />  \r\n\r\n      <Route\r\n          path=\"verify-email\"\r\n          element={\r\n            <OpenRoute>\r\n              <VerifyEmail />\r\n            </OpenRoute>\r\n          }\r\n        />  \r\n\r\n    <Route\r\n          path=\"update-password/:id\"\r\n          element={\r\n            <OpenRoute>\r\n              <UpdatePassword />\r\n            </OpenRoute>\r\n          }\r\n        />  \r\n\r\n    <Route\r\n          path=\"/about\"\r\n          element={\r\n            \r\n              <About />\r\n            \r\n          }\r\n        />\r\n    <Route path=\"/contact\" element={<Contact />} />\r\n\r\n    <Route \r\n      element={\r\n        <PrivateRoute>\r\n          <Dashboard />\r\n        </PrivateRoute>\r\n      }\r\n    >\r\n      <Route path=\"dashboard/my-profile\" element={<MyProfile />} />\r\n      \r\n      <Route path=\"dashboard/Settings\" element={<Settings />} />\r\n      \r\n\r\n      {\r\n        user?.accountType === ACCOUNT_TYPE.STUDENT && (\r\n          <>\r\n          <Route path=\"dashboard/cart\" element={<Cart />} />\r\n          <Route path=\"dashboard/enrolled-courses\" element={<EnrolledCourses />} />\r\n          </>\r\n        )\r\n      }\r\n\r\n      {\r\n        user?.accountType === ACCOUNT_TYPE.INSTRUCTOR && (\r\n          <>\r\n          <Route path=\"dashboard/instructor\" element={<Instructor />} />\r\n          <Route path=\"dashboard/add-course\" element={<AddCourse />} />\r\n          <Route path=\"dashboard/my-courses\" element={<MyCourses />} />\r\n          <Route path=\"dashboard/edit-course/:courseId\" element={<EditCourse />} />\r\n          \r\n          </>\r\n        )\r\n      }\r\n\r\n\r\n    </Route>\r\n\r\n    \r\n      <Route element={\r\n        <PrivateRoute>\r\n          <ViewCourse />\r\n        </PrivateRoute>\r\n      }>\r\n\r\n      {\r\n        user?.accountType === ACCOUNT_TYPE.STUDENT && (\r\n          <>\r\n          <Route \r\n            path=\"view-course/:courseId/section/:sectionId/sub-section/:subSectionId\"\r\n            element={<VideoDetails />}\r\n          />\r\n          </>\r\n        )\r\n      }\r\n\r\n      </Route>\r\n\r\n\r\n\r\n    <Route path=\"*\" element={<Error />} />\r\n\r\n\r\n    </Routes>\r\n\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\reducer\\index.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\constants.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Signup.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Login.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\ForgotPassword.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Home.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\VerifyEmail.jsx",[],["528"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\UpdatePassword.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Contact.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\About.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Dashboard.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Error.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\Catalog.jsx",["529"],[],"import React, { useEffect, useState } from 'react'\r\nimport Footer from '../components/common/Footer'\r\nimport { useParams } from 'react-router-dom'\r\nimport { apiConnector } from '../services/apiconnector';\r\nimport { categories } from '../services/apis';\r\nimport { getCatalogaPageData } from '../services/operations/pageAndComponentData';\r\nimport Course_Card from '../components/core/Catalog/Course_Card';\r\nimport CourseSlider from '../components/core/Catalog/CourseSlider';\r\nimport { useSelector } from \"react-redux\"\r\nimport Error from \"./Error\"\r\n\r\nconst Catalog = () => {\r\n\r\n    const { loading } = useSelector((state) => state.profile)\r\n  const { catalogName } = useParams()\r\n  const [active, setActive] = useState(1)\r\n    const [catalogPageData, setCatalogPageData] = useState(null);\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n\r\n    //Fetch all categories\r\n    useEffect(()=> {\r\n        const getCategories = async() => {\r\n            const res = await apiConnector(\"GET\", categories.CATEGORIES_API);\r\n            const category_id = \r\n            res?.data?.data?.filter((ct) => ct.name.split(\" \").join(\"-\").toLowerCase() === catalogName)[0]._id;\r\n            setCategoryId(category_id);\r\n        }\r\n        getCategories();\r\n    },[catalogName]);\r\n\r\n    useEffect(() => {\r\n        const getCategoryDetails = async() => {\r\n            try{\r\n                const res = await getCatalogaPageData(categoryId);\r\n                console.log(\"PRinting res: \", res);\r\n                setCatalogPageData(res);\r\n            }\r\n            catch(error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if(categoryId) {\r\n            getCategoryDetails();\r\n        }\r\n        \r\n    },[categoryId]);\r\n\r\n\r\n    if (loading || !catalogPageData) {\r\n        return (\r\n          <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n            <div className=\"spinner\"></div>\r\n          </div>\r\n        )\r\n      }\r\n      if (!loading && !catalogPageData.success) {\r\n        return <Error />\r\n      }\r\n    \r\n      return (\r\n        <>\r\n          {/* Hero Section */}\r\n          <div className=\" box-content bg-richblack-800 px-4\">\r\n            <div className=\"mx-auto flex min-h-[260px] max-w-maxContentTab flex-col justify-center gap-4 lg:max-w-maxContent \">\r\n              <p className=\"text-sm text-richblack-300\">\r\n                {`Home / Catalog / `}\r\n                <span className=\"text-yellow-25\">\r\n                  {catalogPageData?.data?.selectedCategory?.name}\r\n                </span>\r\n              </p>\r\n              <p className=\"text-3xl text-richblack-5\">\r\n                {catalogPageData?.data?.selectedCategory?.name}\r\n              </p>\r\n              <p className=\"max-w-[870px] text-richblack-200\">\r\n                {catalogPageData?.data?.selectedCategory?.description}\r\n              </p>\r\n            </div>\r\n          </div>\r\n    \r\n          {/* Section 1 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">Courses to get you started</div>\r\n            <div className=\"my-4 flex border-b border-b-richblack-600 text-sm\">\r\n              <p\r\n                className={`px-4 py-2 ${\r\n                  active === 1\r\n                    ? \"border-b border-b-yellow-25 text-yellow-25\"\r\n                    : \"text-richblack-50\"\r\n                } cursor-pointer`}\r\n                onClick={() => setActive(1)}\r\n              >\r\n                Most Populer\r\n              </p>\r\n              <p\r\n                className={`px-4 py-2 ${\r\n                  active === 2\r\n                    ? \"border-b border-b-yellow-25 text-yellow-25\"\r\n                    : \"text-richblack-50\"\r\n                } cursor-pointer`}\r\n                onClick={() => setActive(2)}\r\n              >\r\n                New\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <CourseSlider\r\n                Courses={catalogPageData?.data?.selectedCategory?.courses}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* Section 2 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">\r\n              Top courses in {catalogPageData?.data?.differentCategory?.name}\r\n            </div>\r\n            <div className=\"py-8\">\r\n              <CourseSlider\r\n                Courses={catalogPageData?.data?.differentCategory?.courses}\r\n              />\r\n            </div>\r\n          </div>\r\n    \r\n          {/* Section 3 */}\r\n          <div className=\" mx-auto box-content w-full max-w-maxContentTab px-4 py-12 lg:max-w-maxContent\">\r\n            <div className=\"section_heading\">Frequently Bought</div>\r\n            <div className=\"py-8\">\r\n              <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                {catalogPageData?.data?.mostSellingCourses\r\n                  ?.slice(0, 4)\r\n                  .map((course, i) => (\r\n                    <Course_Card course={course} key={i} Height={\"h-[400px]\"} />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n    \r\n          <Footer />\r\n        </>\r\n      )\r\n    }\r\n    \r\n    export default Catalog","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\ViewCourse.jsx",[],["530"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\pages\\CourseDetails.jsx",["531","532"],[],"import React, { useEffect, useState } from \"react\"\r\nimport { BiInfoCircle } from \"react-icons/bi\"\r\nimport { HiOutlineGlobeAlt } from \"react-icons/hi\"\r\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nimport ConfirmationModal from \"../components/common/ConfirmationModal\"\r\nimport Footer from \"../components/common/Footer\"\r\nimport RatingStars from \"../components/common/RatingStars\"\r\nimport CourseAccordionBar from \"../components/core/Course/CourseAccordionBar\"\r\nimport CourseDetailsCard from \"../components/core/Course/CourseDetailsCard\"\r\nimport { formatDate } from \"../services/formatDate\"\r\nimport { fetchCourseDetails } from \"../services/operations/courseDetailsAPI\"\r\nimport { buyCourse } from \"../services/operations/studentFeaturesAPI\"\r\nimport GetAvgRating from \"../utils/avgRating\"\r\nimport Error from \"./Error\"\r\n\r\nfunction CourseDetails() {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { loading } = useSelector((state) => state.profile)\r\n  const { paymentLoading } = useSelector((state) => state.course)\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  // Getting courseId from url parameter\r\n  const { courseId } = useParams()\r\n  // console.log(`course id: ${courseId}`)\r\n\r\n  // Declear a state to save the course details\r\n  const [response, setResponse] = useState(null)\r\n  const [confirmationModal, setConfirmationModal] = useState(null)\r\n  useEffect(() => {\r\n    // Calling fetchCourseDetails fucntion to fetch the details\r\n    ;(async () => {\r\n      try {\r\n        const res = await fetchCourseDetails(courseId)\r\n        // console.log(\"course details res: \", res)\r\n        setResponse(res)\r\n      } catch (error) {\r\n        console.log(\"Could not fetch Course Details\")\r\n      }\r\n    })()\r\n  }, [courseId])\r\n\r\n  // console.log(\"response: \", response)\r\n\r\n  // Calculating Avg Review count\r\n  const [avgReviewCount, setAvgReviewCount] = useState(0)\r\n  useEffect(() => {\r\n    const count = GetAvgRating(response?.data?.courseDetails.ratingAndReviews)\r\n    setAvgReviewCount(count)\r\n  }, [response])\r\n  // console.log(\"avgReviewCount: \", avgReviewCount)\r\n\r\n  // // Collapse all\r\n  // const [collapse, setCollapse] = useState(\"\")\r\n  const [isActive, setIsActive] = useState(Array(0))\r\n  const handleActive = (id) => {\r\n    // console.log(\"called\", id)\r\n    setIsActive(\r\n      !isActive.includes(id)\r\n        ? isActive.concat([id])\r\n        : isActive.filter((e) => e != id)\r\n    )\r\n  }\r\n\r\n  // Total number of lectures\r\n  const [totalNoOfLectures, setTotalNoOfLectures] = useState(0)\r\n  useEffect(() => {\r\n    let lectures = 0\r\n    response?.data?.courseDetails?.courseContent?.forEach((sec) => {\r\n      lectures += sec.subSection.length || 0\r\n    })\r\n    setTotalNoOfLectures(lectures)\r\n  }, [response])\r\n\r\n  if (loading || !response) {\r\n    return (\r\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n  if (!response.success) {\r\n    return <Error />\r\n  }\r\n\r\n  const {\r\n    _id: course_id,\r\n    courseName,\r\n    courseDescription,\r\n    thumbnail,\r\n    price,\r\n    whatYouWillLearn,\r\n    courseContent,\r\n    ratingAndReviews,\r\n    instructor,\r\n    studentsEnrolled,\r\n    createdAt,\r\n  } = response.data?.courseDetails\r\n\r\n  const handleBuyCourse = () => {\r\n    if (token) {\r\n      buyCourse(token, [courseId], user, navigate, dispatch)\r\n      return\r\n    }\r\n    setConfirmationModal({\r\n      text1: \"You are not logged in!\",\r\n      text2: \"Please login to Purchase Course.\",\r\n      btn1Text: \"Login\",\r\n      btn2Text: \"Cancel\",\r\n      btn1Handler: () => navigate(\"/login\"),\r\n      btn2Handler: () => setConfirmationModal(null),\r\n    })\r\n  }\r\n\r\n  if (paymentLoading) {\r\n    // console.log(\"payment loading\")\r\n    return (\r\n      <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={`relative w-full bg-richblack-800`}>\r\n        {/* Hero Section */}\r\n        <div className=\"mx-auto box-content px-4 lg:w-[1260px] 2xl:relative \">\r\n          <div className=\"mx-auto grid min-h-[450px] max-w-maxContentTab justify-items-center py-8 lg:mx-0 lg:justify-items-start lg:py-0 xl:max-w-[810px]\">\r\n            <div className=\"relative block max-h-[30rem] lg:hidden\">\r\n              <div className=\"absolute bottom-0 left-0 h-full w-full shadow-[#161D29_0px_-64px_36px_-28px_inset]\"></div>\r\n              <img\r\n                src={thumbnail}\r\n                alt=\"course thumbnail\"\r\n                className=\"aspect-auto w-full\"\r\n              />\r\n            </div>\r\n            <div\r\n              className={`z-30 my-5 flex flex-col justify-center gap-4 py-5 text-lg text-richblack-5`}\r\n            >\r\n              <div>\r\n                <p className=\"text-4xl font-bold text-richblack-5 sm:text-[42px]\">\r\n                  {courseName}\r\n                </p>\r\n              </div>\r\n              <p className={`text-richblack-200`}>{courseDescription}</p>\r\n              <div className=\"text-md flex flex-wrap items-center gap-2\">\r\n                <span className=\"text-yellow-25\">{avgReviewCount}</span>\r\n                <RatingStars Review_Count={avgReviewCount} Star_Size={24} />\r\n                <span>{`(${ratingAndReviews.length} reviews)`}</span>\r\n                <span>{`${studentsEnrolled.length} students enrolled`}</span>\r\n              </div>\r\n              <div>\r\n                <p className=\"\">\r\n                  Created By {`${instructor.firstName} ${instructor.lastName}`}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex flex-wrap gap-5 text-lg\">\r\n                <p className=\"flex items-center gap-2\">\r\n                  {\" \"}\r\n                  <BiInfoCircle /> Created at {formatDate(createdAt)}\r\n                </p>\r\n                <p className=\"flex items-center gap-2\">\r\n                  {\" \"}\r\n                  <HiOutlineGlobeAlt /> English\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex w-full flex-col gap-4 border-y border-y-richblack-500 py-4 lg:hidden\">\r\n              <p className=\"space-x-3 pb-4 text-3xl font-semibold text-richblack-5\">\r\n                Rs. {price}\r\n              </p>\r\n              <button className=\"yellowButton\" onClick={handleBuyCourse}>\r\n                Buy Now\r\n              </button>\r\n              <button className=\"blackButton\">Add to Cart</button>\r\n            </div>\r\n          </div>\r\n          {/* Courses Card */}\r\n          <div className=\"right-[1rem] top-[60px] mx-auto hidden min-h-[600px] w-1/3 max-w-[410px] translate-y-24 md:translate-y-0 lg:absolute  lg:block\">\r\n            <CourseDetailsCard\r\n              course={response?.data?.courseDetails}\r\n              setConfirmationModal={setConfirmationModal}\r\n              handleBuyCourse={handleBuyCourse}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"mx-auto box-content px-4 text-start text-richblack-5 lg:w-[1260px]\">\r\n        <div className=\"mx-auto max-w-maxContentTab lg:mx-0 xl:max-w-[810px]\">\r\n          {/* What will you learn section */}\r\n          <div className=\"my-8 border border-richblack-600 p-8\">\r\n            <p className=\"text-3xl font-semibold\">What you'll learn</p>\r\n            <div className=\"mt-5\">\r\n              <ReactMarkdown>{whatYouWillLearn}</ReactMarkdown>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Course Content Section */}\r\n          <div className=\"max-w-[830px] \">\r\n            <div className=\"flex flex-col gap-3\">\r\n              <p className=\"text-[28px] font-semibold\">Course Content</p>\r\n              <div className=\"flex flex-wrap justify-between gap-2\">\r\n                <div className=\"flex gap-2\">\r\n                  <span>\r\n                    {courseContent.length} {`section(s)`}\r\n                  </span>\r\n                  <span>\r\n                    {totalNoOfLectures} {`lecture(s)`}\r\n                  </span>\r\n                  <span>{response.data?.totalDuration} total length</span>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"text-yellow-25\"\r\n                    onClick={() => setIsActive([])}\r\n                  >\r\n                    Collapse all sections\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Course Details Accordion */}\r\n            <div className=\"py-4\">\r\n              {courseContent?.map((course, index) => (\r\n                <CourseAccordionBar\r\n                  course={course}\r\n                  key={index}\r\n                  isActive={isActive}\r\n                  handleActive={handleActive}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            {/* Author Details */}\r\n            <div className=\"mb-12 py-4\">\r\n              <p className=\"text-[28px] font-semibold\">Author</p>\r\n              <div className=\"flex items-center gap-4 py-4\">\r\n                <img\r\n                  src={\r\n                    instructor.image\r\n                      ? instructor.image\r\n                      : `https://api.dicebear.com/5.x/initials/svg?seed=${instructor.firstName} ${instructor.lastName}`\r\n                  }\r\n                  alt=\"Author\"\r\n                  className=\"h-14 w-14 rounded-full object-cover\"\r\n                />\r\n                <p className=\"text-lg\">{`${instructor.firstName} ${instructor.lastName}`}</p>\r\n              </div>\r\n              <p className=\"text-richblack-50\">\r\n                {instructor?.additionalDetails?.about}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseDetails","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Navbar.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\OpenRoute.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\PrivateRoute.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\MyProfile.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\EnrolledCourses.jsx",["533","534"],[],"import { useEffect, useState } from \"react\"\r\nimport ProgressBar from \"@ramonak/react-progress-bar\"\r\nimport { BiDotsVerticalRounded } from \"react-icons/bi\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { getUserEnrolledCourses } from \"../../../services/operations/profileAPI\"\r\n\r\nexport default function EnrolledCourses() {\r\n  const { token } = useSelector((state) => state.auth)\r\n  const navigate = useNavigate()\r\n\r\n  const [enrolledCourses, setEnrolledCourses] = useState(null)\r\n  const getEnrolledCourses = async () => {\r\n    try {\r\n      const res = await getUserEnrolledCourses(token);\r\n\r\n      setEnrolledCourses(res);\r\n    } catch (error) {\r\n      console.log(\"Could not fetch enrolled courses.\")\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getEnrolledCourses();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-3xl text-richblack-50\">Enrolled Courses</div>\r\n      {!enrolledCourses ? (\r\n        <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n          <div className=\"spinner\"></div>\r\n        </div>\r\n      ) : !enrolledCourses.length ? (\r\n        <p className=\"grid h-[10vh] w-full place-content-center text-richblack-5\">\r\n          You have not enrolled in any course yet.\r\n          {/* TODO: Modify this Empty State */}\r\n        </p>\r\n      ) : (\r\n        <div className=\"my-8 text-richblack-5\">\r\n          {/* Headings */}\r\n          <div className=\"flex rounded-t-lg bg-richblack-500 \">\r\n            <p className=\"w-[45%] px-5 py-3\">Course Name</p>\r\n            <p className=\"w-1/4 px-2 py-3\">Duration</p>\r\n            <p className=\"flex-1 px-2 py-3\">Progress</p>\r\n          </div>\r\n          {/* Course Names */}\r\n          {enrolledCourses.map((course, i, arr) => (\r\n            <div\r\n              className={`flex items-center border border-richblack-700 ${\r\n                i === arr.length - 1 ? \"rounded-b-lg\" : \"rounded-none\"\r\n              }`}\r\n              key={i}\r\n            >\r\n              <div\r\n                className=\"flex w-[45%] cursor-pointer items-center gap-4 px-5 py-3\"\r\n                onClick={() => {\r\n                  navigate(\r\n                    `/view-course/${course?._id}/section/${course.courseContent?.[0]?._id}/sub-section/${course.courseContent?.[0]?.subSection?.[0]?._id}`\r\n                  )\r\n                }}\r\n              >\r\n                <img\r\n                  src={course.thumbnail}\r\n                  alt=\"course_img\"\r\n                  className=\"h-14 w-14 rounded-lg object-cover\"\r\n                />\r\n                <div className=\"flex max-w-xs flex-col gap-2\">\r\n                  <p className=\"font-semibold\">{course.courseName}</p>\r\n                  <p className=\"text-xs text-richblack-300\">\r\n                    {course.courseDescription.length > 50\r\n                      ? `${course.courseDescription.slice(0, 50)}...`\r\n                      : course.courseDescription}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"w-1/4 px-2 py-3\">{course?.totalDuration}</div>\r\n              <div className=\"flex w-1/5 flex-col gap-2 px-2 py-3\">\r\n                <p>Progress: {course.progressPercentage || 0}%</p>\r\n                <ProgressBar\r\n                  completed={course.progressPercentage || 0}\r\n                  height=\"8px\"\r\n                  isLabelVisible={false}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\MyCourses.jsx",[],["535"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorDashboard\\Instructor.jsx",["536"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { fetchInstructorCourses } from '../../../../services/operations/courseDetailsAPI';\r\nimport { getInstructorData } from '../../../../services/operations/profileAPI';\r\nimport InstructorChart from './InstructorChart';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Instructor() {\r\n    const { token } = useSelector((state) => state.auth)\r\n    const { user } = useSelector((state) => state.profile)\r\n    const [loading, setLoading] = useState(false)\r\n    const [instructorData, setInstructorData] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n  \r\n    useEffect(() => {\r\n      ;(async () => {\r\n        setLoading(true)\r\n        const instructorApiData = await getInstructorData(token)\r\n        const result = await fetchInstructorCourses(token)\r\n        console.log(instructorApiData)\r\n        if (instructorApiData.length) setInstructorData(instructorApiData)\r\n        if (result) {\r\n          setCourses(result)\r\n        }\r\n        setLoading(false)\r\n      })()\r\n    }, [])\r\n  \r\n    const totalAmount = instructorData?.reduce(\r\n      (acc, curr) => acc + curr.totalAmountGenerated,\r\n      0\r\n    )\r\n  \r\n    const totalStudents = instructorData?.reduce(\r\n      (acc, curr) => acc + curr.totalStudentsEnrolled,\r\n      0\r\n    )\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"space-y-2\">\r\n          <h1 className=\"text-2xl font-bold text-richblack-5\">\r\n            Hi {user?.firstName} 👋\r\n          </h1>\r\n          <p className=\"font-medium text-richblack-200\">\r\n            Let's start something new\r\n          </p>\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"spinner\"></div>\r\n        ) : courses.length > 0 ? (\r\n          <div>\r\n            <div className=\"my-4 flex h-[450px] space-x-4\">\r\n              {/* Render chart / graph */}\r\n              {totalAmount > 0 || totalStudents > 0 ? (\r\n                <InstructorChart courses={instructorData} />\r\n              ) : (\r\n                <div className=\"flex-1 rounded-md bg-richblack-800 p-6\">\r\n                  <p className=\"text-lg font-bold text-richblack-5\">Visualize</p>\r\n                  <p className=\"mt-4 text-xl font-medium text-richblack-50\">\r\n                    Not Enough Data To Visualize\r\n                  </p>\r\n                </div>\r\n              )}\r\n              {/* Total Statistics */}\r\n              <div className=\"flex min-w-[250px] flex-col rounded-md bg-richblack-800 p-6\">\r\n                <p className=\"text-lg font-bold text-richblack-5\">Statistics</p>\r\n                <div className=\"mt-4 space-y-4\">\r\n                  <div>\r\n                    <p className=\"text-lg text-richblack-200\">Total Courses</p>\r\n                    <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                      {courses.length}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-lg text-richblack-200\">Total Students</p>\r\n                    <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                      {totalStudents}\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className=\"text-lg text-richblack-200\">Total Income</p>\r\n                    <p className=\"text-3xl font-semibold text-richblack-50\">\r\n                      Rs. {totalAmount}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"rounded-md bg-richblack-800 p-6\">\r\n              {/* Render 3 courses */}\r\n              <div className=\"flex items-center justify-between\">\r\n                <p className=\"text-lg font-bold text-richblack-5\">Your Courses</p>\r\n                <Link to=\"/dashboard/my-courses\">\r\n                  <p className=\"text-xs font-semibold text-yellow-50\">View All</p>\r\n                </Link>\r\n              </div>\r\n              <div className=\"my-4 flex items-start space-x-6\">\r\n                {courses.slice(0, 3).map((course) => (\r\n                  <div key={course._id} className=\"w-1/3\">\r\n                    <img\r\n                      src={course.thumbnail}\r\n                      alt={course.courseName}\r\n                      className=\"h-[201px] w-full rounded-md object-cover\"\r\n                    />\r\n                    <div className=\"mt-3 w-full\">\r\n                      <p className=\"text-sm font-medium text-richblack-50\">\r\n                        {course.courseName}\r\n                      </p>\r\n                      <div className=\"mt-1 flex items-center space-x-2\">\r\n                        <p className=\"text-xs font-medium text-richblack-300\">\r\n                          {course.studentsEnroled.length} students\r\n                        </p>\r\n                        <p className=\"text-xs font-medium text-richblack-300\">\r\n                          |\r\n                        </p>\r\n                        <p className=\"text-xs font-medium text-richblack-300\">\r\n                          Rs. {course.price}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"mt-20 rounded-md bg-richblack-800 p-6 py-20\">\r\n            <p className=\"text-center text-2xl font-bold text-richblack-5\">\r\n              You have not created any courses yet\r\n            </p>\r\n            <Link to=\"/dashboard/add-course\">\r\n              <p className=\"mt-1 text-center text-lg font-semibold text-yellow-50\">\r\n                Create a course\r\n              </p>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\VideoDetails.jsx",["537"],[],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate, useParams } from \"react-router-dom\"\r\n\r\nimport \"video-react/dist/video-react.css\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { BigPlayButton, Player } from \"video-react\"\r\n\r\nimport { markLectureAsComplete } from \"../../../services/operations/courseDetailsAPI\"\r\nimport { updateCompletedLectures } from \"../../../slices/viewCourseSlice\"\r\nimport IconBtn from \"../../common/IconBtn\"\r\n\r\nconst VideoDetails = () => {\r\n  const { courseId, sectionId, subSectionId } = useParams()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n  const playerRef = useRef(null)\r\n  const dispatch = useDispatch()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { courseSectionData, courseEntireData, completedLectures } =\r\n    useSelector((state) => state.viewCourse)\r\n\r\n  const [videoData, setVideoData] = useState([])\r\n  const [previewSource, setPreviewSource] = useState(\"\")\r\n  const [videoEnded, setVideoEnded] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      if (!courseSectionData.length) return\r\n      if (!courseId && !sectionId && !subSectionId) {\r\n        navigate(`/dashboard/enrolled-courses`)\r\n      } else {\r\n        // console.log(\"courseSectionData\", courseSectionData)\r\n        const filteredData = courseSectionData.filter(\r\n          (course) => course._id === sectionId\r\n        )\r\n        // console.log(\"filteredData\", filteredData)\r\n        const filteredVideoData = filteredData?.[0]?.subSection.filter(\r\n          (data) => data._id === subSectionId\r\n        )\r\n        // console.log(\"filteredVideoData\", filteredVideoData)\r\n        setVideoData(filteredVideoData[0])\r\n        setPreviewSource(courseEntireData.thumbnail)\r\n        setVideoEnded(false)\r\n      }\r\n    })()\r\n  }, [courseSectionData, courseEntireData, location.pathname])\r\n\r\n  // check if the lecture is the first video of the course\r\n  const isFirstVideo = () => {\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    )\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId)\r\n\r\n    if (currentSectionIndx === 0 && currentSubSectionIndx === 0) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // go to the next video\r\n  const goToNextVideo = () => {\r\n    // console.log(courseSectionData)\r\n\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    )\r\n\r\n    const noOfSubsections =\r\n      courseSectionData[currentSectionIndx].subSection.length\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId)\r\n\r\n    // console.log(\"no of subsections\", noOfSubsections)\r\n\r\n    if (currentSubSectionIndx !== noOfSubsections - 1) {\r\n      const nextSubSectionId =\r\n        courseSectionData[currentSectionIndx].subSection[\r\n          currentSubSectionIndx + 1\r\n        ]._id\r\n      navigate(\r\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${nextSubSectionId}`\r\n      )\r\n    } else {\r\n      const nextSectionId = courseSectionData[currentSectionIndx + 1]._id\r\n      const nextSubSectionId =\r\n        courseSectionData[currentSectionIndx + 1].subSection[0]._id\r\n      navigate(\r\n        `/view-course/${courseId}/section/${nextSectionId}/sub-section/${nextSubSectionId}`\r\n      )\r\n    }\r\n  }\r\n\r\n  // check if the lecture is the last video of the course\r\n  const isLastVideo = () => {\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    )\r\n\r\n    const noOfSubsections =\r\n      courseSectionData[currentSectionIndx].subSection.length\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId)\r\n\r\n    if (\r\n      currentSectionIndx === courseSectionData.length - 1 &&\r\n      currentSubSectionIndx === noOfSubsections - 1\r\n    ) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // go to the previous video\r\n  const goToPrevVideo = () => {\r\n    // console.log(courseSectionData)\r\n\r\n    const currentSectionIndx = courseSectionData.findIndex(\r\n      (data) => data._id === sectionId\r\n    )\r\n\r\n    const currentSubSectionIndx = courseSectionData[\r\n      currentSectionIndx\r\n    ].subSection.findIndex((data) => data._id === subSectionId)\r\n\r\n    if (currentSubSectionIndx !== 0) {\r\n      const prevSubSectionId =\r\n        courseSectionData[currentSectionIndx].subSection[\r\n          currentSubSectionIndx - 1\r\n        ]._id\r\n      navigate(\r\n        `/view-course/${courseId}/section/${sectionId}/sub-section/${prevSubSectionId}`\r\n      )\r\n    } else {\r\n      const prevSectionId = courseSectionData[currentSectionIndx - 1]._id\r\n      const prevSubSectionLength =\r\n        courseSectionData[currentSectionIndx - 1].subSection.length\r\n      const prevSubSectionId =\r\n        courseSectionData[currentSectionIndx - 1].subSection[\r\n          prevSubSectionLength - 1\r\n        ]._id\r\n      navigate(\r\n        `/view-course/${courseId}/section/${prevSectionId}/sub-section/${prevSubSectionId}`\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleLectureCompletion = async () => {\r\n    setLoading(true)\r\n    const res = await markLectureAsComplete(\r\n      { courseId: courseId, subsectionId: subSectionId },\r\n      token\r\n    )\r\n    if (res) {\r\n      dispatch(updateCompletedLectures(subSectionId))\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-5 text-white\">\r\n      {!videoData ? (\r\n        <img\r\n          src={previewSource}\r\n          alt=\"Preview\"\r\n          className=\"h-full w-full rounded-md object-cover\"\r\n        />\r\n      ) : (\r\n        <Player\r\n          ref={playerRef}\r\n          aspectRatio=\"16:9\"\r\n          playsInline\r\n          onEnded={() => setVideoEnded(true)}\r\n          src={videoData?.videoUrl}\r\n        >\r\n          <BigPlayButton position=\"center\" />\r\n          {/* Render When Video Ends */}\r\n          {videoEnded && (\r\n            <div\r\n              style={{\r\n                backgroundImage:\r\n                  \"linear-gradient(to top, rgb(0, 0, 0), rgba(0,0,0,0.7), rgba(0,0,0,0.5), rgba(0,0,0,0.1)\",\r\n              }}\r\n              className=\"full absolute inset-0 z-[100] grid h-full place-content-center font-inter\"\r\n            >\r\n              {!completedLectures.includes(subSectionId) && (\r\n                <IconBtn\r\n                  disabled={loading}\r\n                  onclick={() => handleLectureCompletion()}\r\n                  text={!loading ? \"Mark As Completed\" : \"Loading...\"}\r\n                  customClasses=\"text-xl max-w-max px-4 mx-auto\"\r\n                />\r\n              )}\r\n              <IconBtn\r\n                disabled={loading}\r\n                onclick={() => {\r\n                  if (playerRef?.current) {\r\n                    // set the current time of the video to 0\r\n                    playerRef?.current?.seek(0)\r\n                    setVideoEnded(false)\r\n                  }\r\n                }}\r\n                text=\"Rewatch\"\r\n                customClasses=\"text-xl max-w-max px-4 mx-auto mt-2\"\r\n              />\r\n              <div className=\"mt-10 flex min-w-[250px] justify-center gap-x-4 text-xl\">\r\n                {!isFirstVideo() && (\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={goToPrevVideo}\r\n                    className=\"blackButton\"\r\n                  >\r\n                    Prev\r\n                  </button>\r\n                )}\r\n                {!isLastVideo() && (\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={goToNextVideo}\r\n                    className=\"blackButton\"\r\n                  >\r\n                    Next\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Player>\r\n      )}\r\n\r\n      <h1 className=\"mt-4 text-3xl font-semibold\">{videoData?.title}</h1>\r\n      <p className=\"pt-2 pb-6\">{videoData?.description}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoDetails\r\n// video","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\ReviewSlider.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Footer.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\Template.jsx",["538"],[],"import { FcGoogle } from \"react-icons/fc\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport frameImg from \"../../../assets/Images/frame.png\"\r\nimport LoginForm from \"./LoginForm\"\r\nimport SignupForm from \"./SignupForm\"\r\n\r\nfunction Template({ title, description1, description2, image, formType }) {\r\n  const { loading } = useSelector((state) => state.auth)\r\n\r\n  return (\r\n    <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\r\n      {loading ? (\r\n        <div className=\"spinner\"></div>\r\n      ) : (\r\n        <div className=\"mx-auto flex w-11/12 max-w-maxContent flex-col-reverse justify-between gap-y-12 py-12 md:flex-row md:gap-y-0 md:gap-x-12\">\r\n          <div className=\"mx-auto w-11/12 max-w-[450px] md:mx-0\">\r\n            <h1 className=\"text-[1.875rem] font-semibold leading-[2.375rem] text-richblack-5\">\r\n              {title}\r\n            </h1>\r\n            <p className=\"mt-4 text-[1.125rem] leading-[1.625rem]\">\r\n              <span className=\"text-richblack-100\">{description1}</span>{\" \"}\r\n              <span className=\"font-edu-sa font-bold italic text-blue-100\">\r\n                {description2}\r\n              </span>\r\n            </p>\r\n            {formType === \"signup\" ? <SignupForm /> : <LoginForm />}\r\n          </div>\r\n          <div className=\"relative mx-auto w-11/12 max-w-[450px] md:mx-0\">\r\n            <img\r\n              src={frameImg}\r\n              alt=\"Pattern\"\r\n              width={558}\r\n              height={504}\r\n              loading=\"lazy\"\r\n            />\r\n            <img\r\n              src={image}\r\n              alt=\"Students\"\r\n              width={558}\r\n              height={504}\r\n              loading=\"lazy\"\r\n              className=\"absolute -top-4 right-4 z-10\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Template","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\EditCourse\\index.js",["539"],["540"],"import { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport {\r\n  fetchCourseDetails,\r\n  getFullDetailsOfCourse,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport RenderSteps from \"../AddCourse/RenderSteps\"\r\n\r\nexport default function EditCourse() {\r\n  const dispatch = useDispatch()\r\n  const { courseId } = useParams()\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      setLoading(true)\r\n      const result = await getFullDetailsOfCourse(courseId, token)\r\n      if (result?.courseDetails) {\r\n        dispatch(setEditCourse(true))\r\n        dispatch(setCourse(result?.courseDetails))\r\n      }\r\n      setLoading(false)\r\n    })()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid flex-1 place-items-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-14 text-3xl font-medium text-richblack-5\">\r\n        Edit Course\r\n      </h1>\r\n      <div className=\"mx-auto max-w-[600px]\">\r\n        {course ? (\r\n          <RenderSteps />\r\n        ) : (\r\n          <p className=\"mt-14 text-center text-3xl font-semibold text-richblack-100\">\r\n            Course not found\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Sidebar.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\CourseReviewModal.jsx",[],["541"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\ViewCourse\\VideoDetailsSidebar.jsx",[],["542"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\authSlice.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\profileSlice.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\cartSlice.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\courseSlice.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\slices\\viewCourseSlice.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\avgRating.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\index.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\index.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\index.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\ConfirmationModal.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\RatingStars.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\apiconnector.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\courseDetailsAPI.js",["543"],[],"import { toast } from \"react-hot-toast\"\r\n\r\nimport { updateCompletedLectures } from \"../../slices/viewCourseSlice\"\r\n// import { setLoading } from \"../../slices/profileSlice\";\r\nimport { apiConnector } from \"../apiconnector\"\r\nimport { courseEndpoints } from \"../apis\"\r\n\r\nconst {\r\n  COURSE_DETAILS_API,\r\n  COURSE_CATEGORIES_API,\r\n  GET_ALL_COURSE_API,\r\n  CREATE_COURSE_API,\r\n  EDIT_COURSE_API,\r\n  CREATE_SECTION_API,\r\n  CREATE_SUBSECTION_API,\r\n  UPDATE_SECTION_API,\r\n  UPDATE_SUBSECTION_API,\r\n  DELETE_SECTION_API,\r\n  DELETE_SUBSECTION_API,\r\n  GET_ALL_INSTRUCTOR_COURSES_API,\r\n  DELETE_COURSE_API,\r\n  GET_FULL_COURSE_DETAILS_AUTHENTICATED,\r\n  CREATE_RATING_API,\r\n  LECTURE_COMPLETION_API,\r\n} = courseEndpoints\r\n\r\nexport const getAllCourses = async () => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  let result = []\r\n  try {\r\n    const response = await apiConnector(\"GET\", GET_ALL_COURSE_API)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Course Categories\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"GET_ALL_COURSE_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\nexport const fetchCourseDetails = async (courseId) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  //   dispatch(setLoading(true));\r\n  let result = null\r\n  try {\r\n    const response = await apiConnector(\"POST\", COURSE_DETAILS_API, {\r\n      courseId,\r\n    })\r\n    console.log(\"COURSE_DETAILS_API API RESPONSE............\", response)\r\n\r\n    if (!response.data.success) {\r\n      throw new Error(response.data.message)\r\n    }\r\n    result = response.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_DETAILS_API API ERROR............\", error)\r\n    result = error.response.data\r\n    // toast.error(error.response.data.message);\r\n  }\r\n  toast.dismiss(toastId)\r\n  //   dispatch(setLoading(false));\r\n  return result\r\n}\r\n\r\n// fetching the available course categories\r\nexport const fetchCourseCategories = async () => {\r\n  let result = []\r\n  try {\r\n    const response = await apiConnector(\"GET\", COURSE_CATEGORIES_API)\r\n    console.log(\"COURSE_CATEGORIES_API API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Course Categories\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_CATEGORY_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  return result\r\n}\r\n\r\n// add the course details\r\nexport const addCourseDetails = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_COURSE_API, data, {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Add Course Details\")\r\n    }\r\n    toast.success(\"Course Details Added Successfully\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"CREATE COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// edit the course details\r\nexport const editCourseDetails = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", EDIT_COURSE_API, data, {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"EDIT COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Course Details\")\r\n    }\r\n    toast.success(\"Course Details Updated Successfully\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"EDIT COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a section\r\nexport const createSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Create Section\")\r\n    }\r\n    toast.success(\"Course Section Created\")\r\n    result = response?.data?.updatedCourse\r\n  } catch (error) {\r\n    console.log(\"CREATE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a subsection\r\nexport const createSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Add Lecture\")\r\n    }\r\n    toast.success(\"Lecture Added\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"CREATE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// update a section\r\nexport const updateSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", UPDATE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"UPDATE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Section\")\r\n    }\r\n    toast.success(\"Course Section Updated\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"UPDATE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// update a subsection\r\nexport const updateSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", UPDATE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"UPDATE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Update Lecture\")\r\n    }\r\n    toast.success(\"Lecture Updated\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"UPDATE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// delete a section\r\nexport const deleteSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", DELETE_SECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Section\")\r\n    }\r\n    toast.success(\"Course Section Deleted\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"DELETE SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n// delete a subsection\r\nexport const deleteSubSection = async (data, token) => {\r\n  let result = null\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", DELETE_SUBSECTION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE SUB-SECTION API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Lecture\")\r\n    }\r\n    toast.success(\"Lecture Deleted\")\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"DELETE SUB-SECTION API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// fetching all courses under a specific instructor\r\nexport const fetchInstructorCourses = async (token) => {\r\n  let result = []\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\r\n      \"GET\",\r\n      GET_ALL_INSTRUCTOR_COURSES_API,\r\n      null,\r\n      {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    )\r\n    console.log(\"INSTRUCTOR COURSES API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Fetch Instructor Courses\")\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"INSTRUCTOR COURSES API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// delete a course\r\nexport const deleteCourse = async (data, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"DELETE\", DELETE_COURSE_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"DELETE COURSE API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Delete Course\")\r\n    }\r\n    toast.success(\"Course Deleted\")\r\n  } catch (error) {\r\n    console.log(\"DELETE COURSE API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n}\r\n\r\n// get full details of a course\r\nexport const getFullDetailsOfCourse = async (courseId, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  //   dispatch(setLoading(true));\r\n  let result = null\r\n  try {\r\n    const response = await apiConnector(\r\n      \"POST\",\r\n      GET_FULL_COURSE_DETAILS_AUTHENTICATED,\r\n      {\r\n        courseId,\r\n      },\r\n      {\r\n        Authorization: `Bearer ${token}`,\r\n      }\r\n    )\r\n    console.log(\"COURSE_FULL_DETAILS_API API RESPONSE............\", response)\r\n\r\n    if (!response.data.success) {\r\n      throw new Error(response.data.message)\r\n    }\r\n    result = response?.data?.data\r\n  } catch (error) {\r\n    console.log(\"COURSE_FULL_DETAILS_API API ERROR............\", error)\r\n    result = error.response.data\r\n    // toast.error(error.response.data.message);\r\n  }\r\n  toast.dismiss(toastId)\r\n  //   dispatch(setLoading(false));\r\n  return result\r\n}\r\n\r\n// mark a lecture as complete\r\nexport const markLectureAsComplete = async (data, token) => {\r\n  let result = null\r\n  console.log(\"mark complete data\", data)\r\n  const toastId = toast.loading(\"Loading...\")\r\n  try {\r\n    const response = await apiConnector(\"POST\", LECTURE_COMPLETION_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\r\n      \"MARK_LECTURE_AS_COMPLETE_API API RESPONSE............\",\r\n      response\r\n    )\r\n\r\n    if (!response.data.message) {\r\n      throw new Error(response.data.error)\r\n    }\r\n    toast.success(\"Lecture Completed\")\r\n    result = true\r\n  } catch (error) {\r\n    console.log(\"MARK_LECTURE_AS_COMPLETE_API API ERROR............\", error)\r\n    toast.error(error.message)\r\n    result = false\r\n  }\r\n  toast.dismiss(toastId)\r\n  return result\r\n}\r\n\r\n// create a rating for course\r\nexport const createRating = async (data, token) => {\r\n  const toastId = toast.loading(\"Loading...\")\r\n  let success = false\r\n  try {\r\n    const response = await apiConnector(\"POST\", CREATE_RATING_API, data, {\r\n      Authorization: `Bearer ${token}`,\r\n    })\r\n    console.log(\"CREATE RATING API RESPONSE............\", response)\r\n    if (!response?.data?.success) {\r\n      throw new Error(\"Could Not Create Rating\")\r\n    }\r\n    toast.success(\"Rating Created\")\r\n    success = true\r\n  } catch (error) {\r\n    success = false\r\n    console.log(\"CREATE RATING API ERROR............\", error)\r\n    toast.error(error.message)\r\n  }\r\n  toast.dismiss(toastId)\r\n  return success\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\apis.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\pageAndComponentData.js",["544"],[],"import React from 'react'\r\nimport {toast} from \"react-hot-toast\"\r\nimport { apiConnector } from '../apiconnector';\r\nimport { catalogData } from '../apis';\r\n\r\nexport const getCatalogaPageData = async(categoryId) => {\r\n  const toastId = toast.loading(\"Loading...\");\r\n  let result = [];\r\n  try{\r\n        const response = await apiConnector(\"POST\", catalogData.CATALOGPAGEDATA_API, \r\n        {categoryId: categoryId,});\r\n\r\n        if(!response?.data?.success)\r\n            throw new Error(\"Could not Fetch Category page data\");\r\n\r\n         result = response?.data;\r\n\r\n  }\r\n  catch(error) {\r\n    console.log(\"CATALOG PAGE DATA API ERROR....\", error);\r\n    toast.error(error.message);\r\n    result = error.response?.data;\r\n  }\r\n  toast.dismiss(toastId);\r\n  return result;\r\n}\r\n\r\n","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\authAPI.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\LearningGrid.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\studentFeaturesAPI.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\Quote.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\formatDate.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\Stats.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\AboutPage\\ContactFormSection.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\Button.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\CodeBlocks.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\HighlightText.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\InstructorSection.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\ExploreMore.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\LearningLanguageSection.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\TimelineSection.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactDetails.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Catalog\\Course_Card.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseDetailsCard.js",["545"],[],"import React from \"react\"\r\nimport copy from \"copy-to-clipboard\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\"\r\nimport { FaShareSquare } from \"react-icons/fa\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { addToCart } from \"../../../slices/cartSlice\"\r\nimport { ACCOUNT_TYPE } from \"../../../utils/constants\"\r\n\r\n\r\nfunction CourseDetailsCard({ course, setConfirmationModal, handleBuyCourse }) {\r\n  const { user } = useSelector((state) => state.profile)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    thumbnail: ThumbnailImage,\r\n    price: CurrentPrice,\r\n    _id: courseId,\r\n  } = course\r\n\r\n  const handleShare = () => {\r\n    copy(window.location.href)\r\n    toast.success(\"Link copied to clipboard\")\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    if (user && user?.accountType === ACCOUNT_TYPE.INSTRUCTOR) {\r\n      toast.error(\"You are an Instructor. You can't buy a course.\")\r\n      return\r\n    }\r\n    if (token) {\r\n      dispatch(addToCart(course))\r\n      return\r\n    }\r\n    setConfirmationModal({\r\n      text1: \"You are not logged in!\",\r\n      text2: \"Please login to add To Cart\",\r\n      btn1Text: \"Login\",\r\n      btn2Text: \"Cancel\",\r\n      btn1Handler: () => navigate(\"/login\"),\r\n      btn2Handler: () => setConfirmationModal(null),\r\n    })\r\n  }\r\n\r\n  // console.log(\"Student already enrolled \", course?.studentsEnroled, user?._id)\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`flex flex-col gap-4 rounded-md bg-richblack-700 p-4 text-richblack-5`}\r\n      >\r\n        {/* Course Image */}\r\n        <img\r\n          src={ThumbnailImage}\r\n          alt={course?.courseName}\r\n          className=\"max-h-[300px] min-h-[180px] w-[400px] overflow-hidden rounded-2xl object-cover md:max-w-full\"\r\n        />\r\n\r\n        <div className=\"px-4\">\r\n          <div className=\"space-x-3 pb-4 text-3xl font-semibold\">\r\n            Rs. {CurrentPrice}\r\n          </div>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <button\r\n              className=\"yellowButton\"\r\n              onClick={\r\n                user && course?.studentsEnrolled.includes(user?._id)\r\n                  ? () => navigate(\"/dashboard/enrolled-courses\")\r\n                  : handleBuyCourse\r\n              }\r\n            >\r\n              {user && course?.studentsEnrolled.includes(user?._id)\r\n                ? \"Go To Course\"\r\n                : \"Buy Now\"}\r\n            </button>\r\n            {(!user || !course?.studentsEnrolled.includes(user?._id)) && (\r\n              <button onClick={handleAddToCart} className=\"blackButton\">\r\n                Add to Cart\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div>\r\n            <p className=\"pb-3 pt-6 text-center text-sm text-richblack-25\">\r\n              30-Day Money-Back Guarantee\r\n            </p>\r\n          </div>\r\n\r\n          <div className={``}>\r\n            <p className={`my-2 text-xl font-semibold `}>\r\n              This Course Includes :\r\n            </p>\r\n            <div className=\"flex flex-col gap-3 text-sm text-caribbeangreen-100\">\r\n              {course?.instructions?.map((item, i) => {\r\n                return (\r\n                  <p className={`flex gap-2`} key={i}>\r\n                    <BsFillCaretRightFill />\r\n                    <span>{item}</span>\r\n                  </p>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button\r\n              className=\"mx-auto flex items-center gap-2 py-6 text-yellow-100 \"\r\n              onClick={handleShare}\r\n            >\r\n              <FaShareSquare size={15} /> Share\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseDetailsCard","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseAccordionBar.jsx",["546"],[],"import { useEffect, useRef, useState } from \"react\"\r\nimport { AiOutlineDown } from \"react-icons/ai\"\r\n\r\nimport CourseSubSectionAccordion from \"./CourseSubSectionAccordion\"\r\n\r\nexport default function CourseAccordionBar({ course, isActive, handleActive }) {\r\n  const contentEl = useRef(null)\r\n\r\n  // Accordian state\r\n  const [active, setActive] = useState(false)\r\n  useEffect(() => {\r\n    setActive(isActive?.includes(course._id))\r\n  }, [isActive])\r\n  const [sectionHeight, setSectionHeight] = useState(0)\r\n  useEffect(() => {\r\n    setSectionHeight(active ? contentEl.current.scrollHeight : 0)\r\n  }, [active])\r\n\r\n  return (\r\n    <div className=\"overflow-hidden border border-solid border-richblack-600 bg-richblack-700 text-richblack-5 last:mb-0\">\r\n      <div>\r\n        <div\r\n          className={`flex cursor-pointer items-start justify-between bg-opacity-20 px-7  py-6 transition-[0.3s]`}\r\n          onClick={() => {\r\n            handleActive(course._id)\r\n          }}\r\n        >\r\n          <div className=\"flex items-center gap-2\">\r\n            <i\r\n              className={\r\n                isActive.includes(course._id) ? \"rotate-180\" : \"rotate-0\"\r\n              }\r\n            >\r\n              <AiOutlineDown />\r\n            </i>\r\n            <p>{course?.sectionName}</p>\r\n          </div>\r\n          <div className=\"space-x-4\">\r\n            <span className=\"text-yellow-25\">\r\n              {`${course.subSection.length || 0} lecture(s)`}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        ref={contentEl}\r\n        className={`relative h-0 overflow-hidden bg-richblack-900 transition-[height] duration-[0.35s] ease-[ease]`}\r\n        style={{\r\n          height: sectionHeight,\r\n        }}\r\n      >\r\n        <div className=\"text-textHead flex flex-col gap-2 px-7 py-6 font-semibold\">\r\n          {course?.subSection?.map((subSec, i) => {\r\n            return <CourseSubSectionAccordion subSec={subSec} key={i} />\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactForm.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Catalog\\CourseSlider.jsx",["547","548","549"],[],"import React from 'react'\r\n\r\nimport {Swiper, SwiperSlide} from \"swiper/react\"\r\nimport \"swiper/css\"\r\nimport \"swiper/css/free-mode\"\r\nimport \"swiper/css/pagination\"\r\nimport { Autoplay,FreeMode,Navigation, Pagination}  from 'swiper'\r\n\r\nimport Course_Card from './Course_Card'\r\n\r\nconst CourseSlider = ({Courses}) => {\r\n  return (\r\n    <>\r\n      {Courses?.length ? (\r\n        <Swiper\r\n          slidesPerView={1}\r\n          spaceBetween={25}\r\n          loop={true}\r\n          modules={[FreeMode, Pagination]}\r\n          breakpoints={{\r\n            1024: {\r\n              slidesPerView: 3,\r\n            },\r\n          }}\r\n          className=\"max-h-[30rem]\"\r\n        >\r\n          {Courses?.map((course, i) => (\r\n            <SwiperSlide key={i}>\r\n              <Course_Card course={course} Height={\"h-[250px]\"} />\r\n            </SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      ) : (\r\n        <p className=\"text-xl text-richblack-5\">No Course Found</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CourseSlider\r\n","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\profileAPI.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\utils\\dateFormatter.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\ProfileDropDown.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\IconBtn.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorDashboard\\InstructorChart.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\navbar-links.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\footer-links.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\dashboard-links.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\InstructorCourses\\CoursesTable.jsx",["550","551","552"],[],"import { useDispatch, useSelector } from \"react-redux\"\r\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"react-super-responsive-table\"\r\n\r\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\r\nimport { useState } from \"react\"\r\nimport { FaCheck } from \"react-icons/fa\"\r\nimport { FiEdit2 } from \"react-icons/fi\"\r\nimport { HiClock } from \"react-icons/hi\"\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { formatDate } from \"../../../../services/formatDate\"\r\nimport {\r\n  deleteCourse,\r\n  fetchInstructorCourses,\r\n} from \"../../../../services/operations/courseDetailsAPI\"\r\nimport { COURSE_STATUS } from \"../../../../utils/constants\"\r\nimport ConfirmationModal from \"../../../common/ConfirmationModal\"\r\n\r\nexport default function CoursesTable({ courses, setCourses }) {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const [loading, setLoading] = useState(false)\r\n  const [confirmationModal, setConfirmationModal] = useState(null)\r\n  const TRUNCATE_LENGTH = 30\r\n\r\n  const handleCourseDelete = async (courseId) => {\r\n    setLoading(true)\r\n    await deleteCourse({ courseId: courseId }, token)\r\n    const result = await fetchInstructorCourses(token)\r\n    if (result) {\r\n      setCourses(result)\r\n    }\r\n    setConfirmationModal(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  // console.log(\"All Course \", courses)\r\n\r\n  return (\r\n    <>\r\n      <Table className=\"rounded-xl border border-richblack-800 \">\r\n        <Thead>\r\n          <Tr className=\"flex gap-x-10 rounded-t-md border-b border-b-richblack-800 px-6 py-2\">\r\n            <Th className=\"flex-1 text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Courses\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Duration\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Price\r\n            </Th>\r\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\r\n              Actions\r\n            </Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {courses?.length === 0 ? (\r\n            <Tr>\r\n              <Td className=\"py-10 text-center text-2xl font-medium text-richblack-100\">\r\n                No courses found\r\n                {/* TODO: Need to change this state */}\r\n              </Td>\r\n            </Tr>\r\n          ) : (\r\n            courses?.map((course) => (\r\n              <Tr\r\n                key={course._id}\r\n                className=\"flex gap-x-10 border-b border-richblack-800 px-6 py-8\"\r\n              >\r\n                <Td className=\"flex flex-1 gap-x-4\">\r\n                  <img\r\n                    src={course?.thumbnail}\r\n                    alt={course?.courseName}\r\n                    className=\"h-[148px] w-[220px] rounded-lg object-cover\"\r\n                  />\r\n                  <div className=\"flex flex-col justify-between\">\r\n                    <p className=\"text-lg font-semibold text-richblack-5\">\r\n                      {course.courseName}\r\n                    </p>\r\n                    <p className=\"text-xs text-richblack-300\">\r\n                      {course.courseDescription.split(\" \").length >\r\n                      TRUNCATE_LENGTH\r\n                        ? course.courseDescription\r\n                            .split(\" \")\r\n                            .slice(0, TRUNCATE_LENGTH)\r\n                            .join(\" \") + \"...\"\r\n                        : course.courseDescription}\r\n                    </p>\r\n                    <p className=\"text-[12px] text-white\">\r\n                      Created: {formatDate(course.createdAt)}\r\n                    </p>\r\n                    {course.status === COURSE_STATUS.DRAFT ? (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-pink-100\">\r\n                        <HiClock size={14} />\r\n                        Drafted\r\n                      </p>\r\n                    ) : (\r\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-yellow-100\">\r\n                        <div className=\"flex h-3 w-3 items-center justify-center rounded-full bg-yellow-100 text-richblack-700\">\r\n                          <FaCheck size={8} />\r\n                        </div>\r\n                        Published\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  2hr 30min\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100\">\r\n                  ₹{course.price}\r\n                </Td>\r\n                <Td className=\"text-sm font-medium text-richblack-100 \">\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      navigate(`/dashboard/edit-course/${course._id}`)\r\n                    }}\r\n                    title=\"Edit\"\r\n                    className=\"px-2 transition-all duration-200 hover:scale-110 hover:text-caribbeangreen-300\"\r\n                  >\r\n                    <FiEdit2 size={20} />\r\n                  </button>\r\n                  <button\r\n                    disabled={loading}\r\n                    onClick={() => {\r\n                      setConfirmationModal({\r\n                        text1: \"Do you want to delete this course?\",\r\n                        text2:\r\n                          \"All the data related to this course will be deleted\",\r\n                        btn1Text: !loading ? \"Delete\" : \"Loading...  \",\r\n                        btn2Text: \"Cancel\",\r\n                        btn1Handler: !loading\r\n                          ? () => handleCourseDelete(course._id)\r\n                          : () => {},\r\n                        btn2Handler: !loading\r\n                          ? () => setConfirmationModal(null)\r\n                          : () => {},\r\n                      })\r\n                    }}\r\n                    title=\"Delete\"\r\n                    className=\"px-1 transition-all duration-200 hover:scale-110 hover:text-[#ff0000]\"\r\n                  >\r\n                    <RiDeleteBin6Line size={20} />\r\n                  </button>\r\n                </Td>\r\n              </Tr>\r\n            ))\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\SignupForm.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\SidebarLink.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Auth\\LoginForm.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\RenderSteps.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\data\\homepage-explore.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\RenderTotalAmount.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Cart\\RenderCartCourses.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\ChangeProfilePicture.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\EditProfile.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\DeleteAccount.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\Settings\\UpdatePassword.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\ContactPage\\ContactUsForm.jsx",["553"],[],"import React, { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\n\r\nimport CountryCode from \"../../data/countrycode.json\"\r\nimport { apiConnector } from \"../../services/apiconnector\"\r\nimport { contactusEndpoint } from \"../../services/apis\"\r\n\r\nconst ContactUsForm = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isSubmitSuccessful },\r\n  } = useForm()\r\n\r\n  const submitContactForm = async (data) => {\r\n    // console.log(\"Form Data - \", data)\r\n    try {\r\n      setLoading(true)\r\n      const res = await apiConnector(\r\n        \"POST\",\r\n        contactusEndpoint.CONTACT_US_API,\r\n        data\r\n      )\r\n      // console.log(\"Email Res - \", res)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log(\"ERROR MESSAGE - \", error.message)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isSubmitSuccessful) {\r\n      reset({\r\n        email: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        message: \"\",\r\n        phoneNo: \"\",\r\n      })\r\n    }\r\n  }, [reset, isSubmitSuccessful])\r\n\r\n  return (\r\n    <form\r\n      className=\"flex flex-col gap-7\"\r\n      onSubmit={handleSubmit(submitContactForm)}\r\n    >\r\n      <div className=\"flex flex-col gap-5 lg:flex-row\">\r\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\r\n          <label htmlFor=\"firstname\" className=\"lable-style\">\r\n            First Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstname\"\r\n            id=\"firstname\"\r\n            placeholder=\"Enter first name\"\r\n            className=\"form-style\"\r\n            {...register(\"firstname\", { required: true })}\r\n          />\r\n          {errors.firstname && (\r\n            <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n              Please enter your name.\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\r\n          <label htmlFor=\"lastname\" className=\"lable-style\">\r\n            Last Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastname\"\r\n            id=\"lastname\"\r\n            placeholder=\"Enter last name\"\r\n            className=\"form-style\"\r\n            {...register(\"lastname\")}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"email\" className=\"lable-style\">\r\n          Email Address\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder=\"Enter email address\"\r\n          className=\"form-style\"\r\n          {...register(\"email\", { required: true })}\r\n        />\r\n        {errors.email && (\r\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n            Please enter your Email address.\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"phonenumber\" className=\"lable-style\">\r\n          Phone Number\r\n        </label>\r\n\r\n        <div className=\"flex gap-5\">\r\n          <div className=\"flex w-[81px] flex-col gap-2\">\r\n            <select\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              id=\"firstname\"\r\n              placeholder=\"Enter first name\"\r\n              className=\"form-style\"\r\n              {...register(\"countrycode\", { required: true })}\r\n            >\r\n              {CountryCode.map((ele, i) => {\r\n                return (\r\n                  <option key={i} value={ele.code}>\r\n                    {ele.code} -{ele.country}\r\n                  </option>\r\n                )\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex w-[calc(100%-90px)] flex-col gap-2\">\r\n            <input\r\n              type=\"number\"\r\n              name=\"phonenumber\"\r\n              id=\"phonenumber\"\r\n              placeholder=\"12345 67890\"\r\n              className=\"form-style\"\r\n              {...register(\"phoneNo\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your Phone Number.\",\r\n                },\r\n                maxLength: { value: 12, message: \"Invalid Phone Number\" },\r\n                minLength: { value: 10, message: \"Invalid Phone Number\" },\r\n              })}\r\n            />\r\n          </div>\r\n        </div>\r\n        {errors.phoneNo && (\r\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n            {errors.phoneNo.message}\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col gap-2\">\r\n        <label htmlFor=\"message\" className=\"lable-style\">\r\n          Message\r\n        </label>\r\n        <textarea\r\n          name=\"message\"\r\n          id=\"message\"\r\n          cols=\"30\"\r\n          rows=\"7\"\r\n          placeholder=\"Enter your message here\"\r\n          className=\"form-style\"\r\n          {...register(\"message\", { required: true })}\r\n        />\r\n        {errors.message && (\r\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n            Please enter your Message.\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        disabled={loading}\r\n        type=\"submit\"\r\n        className={`rounded-md bg-yellow-50 px-6 py-3 text-center text-[13px] font-bold text-black shadow-[2px_2px_0px_0px_rgba(255,255,255,0.18)] \r\n         ${\r\n           !loading &&\r\n           \"transition-all duration-200 hover:scale-95 hover:shadow-none\"\r\n         }  disabled:bg-richblack-500 sm:text-[16px] `}\r\n      >\r\n        Send Message\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ContactUsForm","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\HomePage\\CourseCard.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Course\\CourseSubSectionAccordion.jsx",["554","555","556","557"],[],"import React, { useEffect, useRef, useState } from \"react\"\r\nimport { AiOutlineDown } from \"react-icons/ai\"\r\nimport { HiOutlineVideoCamera } from \"react-icons/hi\"\r\n\r\nfunction CourseSubSectionAccordion({ subSec }) {\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between py-2\">\r\n        <div className={`flex items-center gap-2`}>\r\n          <span>\r\n            <HiOutlineVideoCamera />\r\n          </span>\r\n          <p>{subSec?.title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseSubSectionAccordion","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\hooks\\useOnClickOutside.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\common\\Tab.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\services\\operations\\SettingsAPI.js",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\CourseBuilderForm.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\CourseInformationForm.jsx",[],["558"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\PublishCourse\\index.jsx",["559"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nimport { editCourseDetails } from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { resetCourseState, setStep } from \"../../../../../slices/courseSlice\"\r\nimport { COURSE_STATUS } from \"../../../../../utils/constants\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\n\r\nexport default function PublishCourse() {\r\n  const { register, handleSubmit, setValue, getValues } = useForm()\r\n\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (course?.status === COURSE_STATUS.PUBLISHED) {\r\n      setValue(\"public\", true)\r\n    }\r\n  }, [])\r\n\r\n  const goBack = () => {\r\n    dispatch(setStep(2))\r\n  }\r\n\r\n  const goToCourses = () => {\r\n    dispatch(resetCourseState())\r\n    navigate(\"/dashboard/my-courses\")\r\n  }\r\n\r\n  const handleCoursePublish = async () => {\r\n    // check if form has been updated or not\r\n    if (\r\n      (course?.status === COURSE_STATUS.PUBLISHED &&\r\n        getValues(\"public\") === true) ||\r\n      (course?.status === COURSE_STATUS.DRAFT && getValues(\"public\") === false)\r\n    ) {\r\n      // form has not been updated\r\n      // no need to make api call\r\n      goToCourses()\r\n      return\r\n    }\r\n    const formData = new FormData()\r\n    formData.append(\"courseId\", course._id)\r\n    const courseStatus = getValues(\"public\")\r\n      ? COURSE_STATUS.PUBLISHED\r\n      : COURSE_STATUS.DRAFT\r\n    formData.append(\"status\", courseStatus)\r\n    setLoading(true)\r\n    const result = await editCourseDetails(formData, token)\r\n    if (result) {\r\n      goToCourses()\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log(data)\r\n    handleCoursePublish()\r\n  }\r\n\r\n  return (\r\n    <div className=\"rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-6\">\r\n      <p className=\"text-2xl font-semibold text-richblack-5\">\r\n        Publish Settings\r\n      </p>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* Checkbox */}\r\n        <div className=\"my-6 mb-8\">\r\n          <label htmlFor=\"public\" className=\"inline-flex items-center text-lg\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"public\"\r\n              {...register(\"public\")}\r\n              className=\"border-gray-300 h-4 w-4 rounded bg-richblack-500 text-richblack-400 focus:ring-2 focus:ring-richblack-5\"\r\n            />\r\n            <span className=\"ml-2 text-richblack-400\">\r\n              Make this course as public\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        {/* Next Prev Button */}\r\n        <div className=\"ml-auto flex max-w-max items-center gap-x-4\">\r\n          <button\r\n            disabled={loading}\r\n            type=\"button\"\r\n            onClick={goBack}\r\n            className=\"flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900\"\r\n          >\r\n            Back\r\n          </button>\r\n          <IconBtn disabled={loading} text=\"Save Changes\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\NestedView.jsx",[],[],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\Upload.jsx",["560"],["561","562"],"import { useEffect, useRef, useState } from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { FiUploadCloud } from \"react-icons/fi\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport \"video-react/dist/video-react.css\"\r\nimport { Player } from \"video-react\"\r\n\r\nexport default function Upload({\r\n  name,\r\n  label,\r\n  register,\r\n  setValue,\r\n  errors,\r\n  video = false,\r\n  viewData = null,\r\n  editData = null,\r\n}) {\r\n  const { course } = useSelector((state) => state.course)\r\n  const [selectedFile, setSelectedFile] = useState(null)\r\n  const [previewSource, setPreviewSource] = useState(\r\n    viewData ? viewData : editData ? editData : \"\"\r\n  )\r\n  const inputRef = useRef(null)\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    const file = acceptedFiles[0]\r\n    if (file) {\r\n      previewFile(file)\r\n      setSelectedFile(file)\r\n    }\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: !video\r\n      ? { \"image/*\": [\".jpeg\", \".jpg\", \".png\"] }\r\n      : { \"video/*\": [\".mp4\"] },\r\n    onDrop,\r\n  })\r\n\r\n  const previewFile = (file) => {\r\n    // console.log(file)\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    register(name, { required: true })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [register])\r\n\r\n  useEffect(() => {\r\n    setValue(name, selectedFile)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedFile, setValue])\r\n\r\n  return (\r\n    <div className=\"flex flex-col space-y-2\">\r\n      <label className=\"text-sm text-richblack-5\" htmlFor={name}>\r\n        {label} {!viewData && <sup className=\"text-pink-200\">*</sup>}\r\n      </label>\r\n      <div\r\n        className={`${\r\n          isDragActive ? \"bg-richblack-600\" : \"bg-richblack-700\"\r\n        } flex min-h-[250px] cursor-pointer items-center justify-center rounded-md border-2 border-dotted border-richblack-500`}\r\n      >\r\n        {previewSource ? (\r\n          <div className=\"flex w-full flex-col p-6\">\r\n            {!video ? (\r\n              <img\r\n                src={previewSource}\r\n                alt=\"Preview\"\r\n                className=\"h-full w-full rounded-md object-cover\"\r\n              />\r\n            ) : (\r\n              <Player aspectRatio=\"16:9\" playsInline src={previewSource} />\r\n            )}\r\n            {!viewData && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPreviewSource(\"\")\r\n                  setSelectedFile(null)\r\n                  setValue(name, null)\r\n                }}\r\n                className=\"mt-3 text-richblack-400 underline\"\r\n              >\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className=\"flex w-full flex-col items-center p-6\"\r\n            {...getRootProps()}\r\n          >\r\n            <input {...getInputProps()} ref={inputRef} />\r\n            <div className=\"grid aspect-square w-14 place-items-center rounded-full bg-pure-greys-800\">\r\n              <FiUploadCloud className=\"text-2xl text-yellow-50\" />\r\n            </div>\r\n            <p className=\"mt-2 max-w-[200px] text-center text-sm text-richblack-200\">\r\n              Drag and drop an {!video ? \"image\" : \"video\"}, or click to{\" \"}\r\n              <span className=\"font-semibold text-yellow-50\">Browse</span> a\r\n              file\r\n            </p>\r\n            <ul className=\"mt-10 flex list-disc justify-between space-x-12 text-center  text-xs text-richblack-200\">\r\n              <li>Aspect ratio 16:9</li>\r\n              <li>Recommended size 1024x576</li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errors[name] && (\r\n        <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n          {label} is required\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}","C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\ChipInput.jsx",[],["563","564"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseInformation\\RequirementField.jsx",[],["565","566"],"C:\\Users\\s\\Desktop\\StudyNotion-An-Online-Education-Platform\\src\\components\\core\\Dashboard\\AddCourse\\CourseBuilder\\SubSectionModal.jsx",["567"],[],"import { useEffect, useState } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { toast } from \"react-hot-toast\"\r\nimport { RxCross2 } from \"react-icons/rx\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  createSubSection,\r\n  updateSubSection,\r\n} from \"../../../../../services/operations/courseDetailsAPI\"\r\nimport { setCourse } from \"../../../../../slices/courseSlice\"\r\nimport IconBtn from \"../../../../common/IconBtn\"\r\nimport Upload from \"../Upload\"\r\n\r\nexport default function SubSectionModal({\r\n  modalData,\r\n  setModalData,\r\n  add = false,\r\n  view = false,\r\n  edit = false,\r\n}) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    getValues,\r\n  } = useForm()\r\n\r\n  // console.log(\"view\", view)\r\n  // console.log(\"edit\", edit)\r\n  // console.log(\"add\", add)\r\n\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const { token } = useSelector((state) => state.auth)\r\n  const { course } = useSelector((state) => state.course)\r\n\r\n  useEffect(() => {\r\n    if (view || edit) {\r\n      // console.log(\"modalData\", modalData)\r\n      setValue(\"lectureTitle\", modalData.title)\r\n      setValue(\"lectureDesc\", modalData.description)\r\n      setValue(\"lectureVideo\", modalData.videoUrl)\r\n    }\r\n  }, [])\r\n\r\n  // detect whether form is updated or not\r\n  const isFormUpdated = () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    if (\r\n      currentValues.lectureTitle !== modalData.title ||\r\n      currentValues.lectureDesc !== modalData.description ||\r\n      currentValues.lectureVideo !== modalData.videoUrl\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // handle the editing of subsection\r\n  const handleEditSubsection = async () => {\r\n    const currentValues = getValues()\r\n    // console.log(\"changes after editing form values:\", currentValues)\r\n    const formData = new FormData()\r\n    // console.log(\"Values After Editing form values:\", currentValues)\r\n    formData.append(\"sectionId\", modalData.sectionId)\r\n    formData.append(\"subSectionId\", modalData._id)\r\n    if (currentValues.lectureTitle !== modalData.title) {\r\n      formData.append(\"title\", currentValues.lectureTitle)\r\n    }\r\n    if (currentValues.lectureDesc !== modalData.description) {\r\n      formData.append(\"description\", currentValues.lectureDesc)\r\n    }\r\n    if (currentValues.lectureVideo !== modalData.videoUrl) {\r\n      formData.append(\"video\", currentValues.lectureVideo)\r\n    }\r\n    setLoading(true)\r\n    const result = await updateSubSection(formData, token)\r\n    if (result) {\r\n      // console.log(\"result\", result)\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData.sectionId ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    // console.log(data)\r\n    if (view) return\r\n\r\n    if (edit) {\r\n      if (!isFormUpdated()) {\r\n        toast.error(\"No changes made to the form\")\r\n      } else {\r\n        handleEditSubsection()\r\n      }\r\n      return\r\n    }\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"sectionId\", modalData)\r\n    formData.append(\"title\", data.lectureTitle)\r\n    formData.append(\"description\", data.lectureDesc)\r\n    formData.append(\"video\", data.lectureVideo)\r\n    setLoading(true)\r\n    const result = await createSubSection(formData, token)\r\n    if (result) {\r\n      // update the structure of course\r\n      const updatedCourseContent = course.courseContent.map((section) =>\r\n        section._id === modalData ? result : section\r\n      )\r\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\r\n      dispatch(setCourse(updatedCourse))\r\n    }\r\n    setModalData(null)\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-[1000] !mt-0 grid h-screen w-screen place-items-center overflow-auto bg-white bg-opacity-10 backdrop-blur-sm\">\r\n      <div className=\"my-10 w-11/12 max-w-[700px] rounded-lg border border-richblack-400 bg-richblack-800\">\r\n        {/* Modal Header */}\r\n        <div className=\"flex items-center justify-between rounded-t-lg bg-richblack-700 p-5\">\r\n          <p className=\"text-xl font-semibold text-richblack-5\">\r\n            {view && \"Viewing\"} {add && \"Adding\"} {edit && \"Editing\"} Lecture\r\n          </p>\r\n          <button onClick={() => (!loading ? setModalData(null) : {})}>\r\n            <RxCross2 className=\"text-2xl text-richblack-5\" />\r\n          </button>\r\n        </div>\r\n        {/* Modal Form */}\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"space-y-8 px-8 py-10\"\r\n        >\r\n          {/* Lecture Video Upload */}\r\n          <Upload\r\n            name=\"lectureVideo\"\r\n            label=\"Lecture Video\"\r\n            register={register}\r\n            setValue={setValue}\r\n            errors={errors}\r\n            video={true}\r\n            viewData={view ? modalData.videoUrl : null}\r\n            editData={edit ? modalData.videoUrl : null}\r\n          />\r\n          {/* Lecture Title */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureTitle\">\r\n              Lecture Title {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <input\r\n              disabled={view || loading}\r\n              id=\"lectureTitle\"\r\n              placeholder=\"Enter Lecture Title\"\r\n              {...register(\"lectureTitle\", { required: true })}\r\n              className=\"form-style w-full\"\r\n            />\r\n            {errors.lectureTitle && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture title is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {/* Lecture Description */}\r\n          <div className=\"flex flex-col space-y-2\">\r\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureDesc\">\r\n              Lecture Description{\" \"}\r\n              {!view && <sup className=\"text-pink-200\">*</sup>}\r\n            </label>\r\n            <textarea\r\n              disabled={view || loading}\r\n              id=\"lectureDesc\"\r\n              placeholder=\"Enter Lecture Description\"\r\n              {...register(\"lectureDesc\", { required: true })}\r\n              className=\"form-style resize-x-none min-h-[130px] w-full\"\r\n            />\r\n            {errors.lectureDesc && (\r\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\r\n                Lecture Description is required\r\n              </span>\r\n            )}\r\n          </div>\r\n          {!view && (\r\n            <div className=\"flex justify-end\">\r\n              <IconBtn\r\n                disabled={loading}\r\n                text={loading ? \"Loading..\" : edit ? \"Save Changes\" : \"Save\"}\r\n              />\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}",{"ruleId":"568","severity":1,"message":"569","line":34,"column":9,"nodeType":"570","messageId":"571","endLine":34,"endColumn":17},{"ruleId":"568","severity":1,"message":"572","line":35,"column":9,"nodeType":"570","messageId":"571","endLine":35,"endColumn":17},{"ruleId":"573","severity":1,"message":"574","line":22,"column":6,"nodeType":"575","endLine":22,"endColumn":8,"suggestions":"576","suppressions":"577"},{"ruleId":"578","severity":1,"message":"579","line":131,"column":21,"nodeType":"580","messageId":"581","endLine":131,"endColumn":81},{"ruleId":"573","severity":1,"message":"582","line":35,"column":6,"nodeType":"575","endLine":35,"endColumn":8,"suggestions":"583","suppressions":"584"},{"ruleId":"585","severity":1,"message":"586","line":65,"column":36,"nodeType":"587","messageId":"588","endLine":65,"endColumn":38},{"ruleId":"568","severity":1,"message":"589","line":91,"column":10,"nodeType":"570","messageId":"571","endLine":91,"endColumn":19},{"ruleId":"568","severity":1,"message":"590","line":3,"column":10,"nodeType":"570","messageId":"571","endLine":3,"endColumn":31},{"ruleId":"573","severity":1,"message":"591","line":25,"column":6,"nodeType":"575","endLine":25,"endColumn":8,"suggestions":"592"},{"ruleId":"573","severity":1,"message":"593","line":24,"column":6,"nodeType":"575","endLine":24,"endColumn":8,"suggestions":"594","suppressions":"595"},{"ruleId":"573","severity":1,"message":"593","line":27,"column":8,"nodeType":"575","endLine":27,"endColumn":10,"suggestions":"596"},{"ruleId":"573","severity":1,"message":"597","line":48,"column":6,"nodeType":"575","endLine":48,"endColumn":62,"suggestions":"598"},{"ruleId":"568","severity":1,"message":"599","line":1,"column":10,"nodeType":"570","messageId":"571","endLine":1,"endColumn":18},{"ruleId":"568","severity":1,"message":"600","line":6,"column":3,"nodeType":"570","messageId":"571","endLine":6,"endColumn":21},{"ruleId":"573","severity":1,"message":"582","line":30,"column":6,"nodeType":"575","endLine":30,"endColumn":8,"suggestions":"601","suppressions":"602"},{"ruleId":"573","severity":1,"message":"603","line":26,"column":6,"nodeType":"575","endLine":26,"endColumn":8,"suggestions":"604","suppressions":"605"},{"ruleId":"573","severity":1,"message":"606","line":39,"column":6,"nodeType":"575","endLine":39,"endColumn":62,"suggestions":"607","suppressions":"608"},{"ruleId":"568","severity":1,"message":"609","line":3,"column":10,"nodeType":"570","messageId":"571","endLine":3,"endColumn":33},{"ruleId":"568","severity":1,"message":"610","line":1,"column":8,"nodeType":"570","messageId":"571","endLine":1,"endColumn":13},{"ruleId":"568","severity":1,"message":"611","line":22,"column":10,"nodeType":"570","messageId":"571","endLine":22,"endColumn":18},{"ruleId":"573","severity":1,"message":"612","line":13,"column":6,"nodeType":"575","endLine":13,"endColumn":16,"suggestions":"613"},{"ruleId":"568","severity":1,"message":"614","line":7,"column":10,"nodeType":"570","messageId":"571","endLine":7,"endColumn":18},{"ruleId":"568","severity":1,"message":"615","line":7,"column":28,"nodeType":"570","messageId":"571","endLine":7,"endColumn":38},{"ruleId":"578","severity":1,"message":"579","line":29,"column":15,"nodeType":"580","messageId":"581","endLine":29,"endColumn":67},{"ruleId":"568","severity":1,"message":"616","line":4,"column":10,"nodeType":"570","messageId":"571","endLine":4,"endColumn":19},{"ruleId":"568","severity":1,"message":"617","line":4,"column":21,"nodeType":"570","messageId":"571","endLine":4,"endColumn":34},{"ruleId":"568","severity":1,"message":"569","line":22,"column":9,"nodeType":"570","messageId":"571","endLine":22,"endColumn":17},{"ruleId":"568","severity":1,"message":"618","line":21,"column":13,"nodeType":"570","messageId":"571","endLine":21,"endColumn":16},{"ruleId":"568","severity":1,"message":"619","line":1,"column":17,"nodeType":"570","messageId":"571","endLine":1,"endColumn":26},{"ruleId":"568","severity":1,"message":"620","line":1,"column":28,"nodeType":"570","messageId":"571","endLine":1,"endColumn":34},{"ruleId":"568","severity":1,"message":"621","line":1,"column":36,"nodeType":"570","messageId":"571","endLine":1,"endColumn":44},{"ruleId":"568","severity":1,"message":"622","line":2,"column":10,"nodeType":"570","messageId":"571","endLine":2,"endColumn":23},{"ruleId":"573","severity":1,"message":"623","line":60,"column":6,"nodeType":"575","endLine":60,"endColumn":8,"suggestions":"624","suppressions":"625"},{"ruleId":"573","severity":1,"message":"626","line":24,"column":6,"nodeType":"575","endLine":24,"endColumn":8,"suggestions":"627"},{"ruleId":"568","severity":1,"message":"628","line":19,"column":11,"nodeType":"570","messageId":"571","endLine":19,"endColumn":17},{"ruleId":"573","severity":1,"message":"629","line":53,"column":6,"nodeType":"575","endLine":53,"endColumn":16,"suggestions":"630","suppressions":"631"},{"ruleId":"573","severity":1,"message":"629","line":58,"column":6,"nodeType":"575","endLine":58,"endColumn":30,"suggestions":"632","suppressions":"633"},{"ruleId":"573","severity":1,"message":"634","line":30,"column":6,"nodeType":"575","endLine":30,"endColumn":8,"suggestions":"635","suppressions":"636"},{"ruleId":"573","severity":1,"message":"637","line":35,"column":6,"nodeType":"575","endLine":35,"endColumn":13,"suggestions":"638","suppressions":"639"},{"ruleId":"573","severity":1,"message":"640","line":22,"column":6,"nodeType":"575","endLine":22,"endColumn":8,"suggestions":"641","suppressions":"642"},{"ruleId":"573","severity":1,"message":"637","line":27,"column":6,"nodeType":"575","endLine":27,"endColumn":24,"suggestions":"643","suppressions":"644"},{"ruleId":"573","severity":1,"message":"645","line":46,"column":6,"nodeType":"575","endLine":46,"endColumn":8,"suggestions":"646"},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'signupData'. Either include them or remove the dependency array.","ArrayExpression",["647"],["648"],"react/jsx-pascal-case","Imported JSX component Course_Card must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","React Hook useEffect has missing dependencies: 'courseId', 'dispatch', and 'token'. Either include them or remove the dependency array.",["649"],["650"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'course_id' is assigned a value but never used.","'BiDotsVerticalRounded' is defined but never used.","React Hook useEffect has a missing dependency: 'getEnrolledCourses'. Either include it or remove the dependency array.",["651"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["652"],["653"],["654"],"React Hook useEffect has missing dependencies: 'courseId', 'navigate', 'sectionId', and 'subSectionId'. Either include them or remove the dependency array.",["655"],"'FcGoogle' is defined but never used.","'fetchCourseDetails' is defined but never used.",["656"],["657"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["658"],["659"],"React Hook useEffect has missing dependencies: 'sectionId' and 'subSectionId'. Either include them or remove the dependency array.",["660"],["661"],"'updateCompletedLectures' is defined but never used.","'React' is defined but never used.","'courseId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'course._id'. Either include it or remove the dependency array. If 'setActive' needs the current value of 'course._id', you can also switch to useReducer instead of useState and read 'course._id' in the reducer.",["662"],"'Autoplay' is defined but never used.","'Navigation' is defined but never used.","'setCourse' is defined but never used.","'setEditCourse' is defined but never used.","'res' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'AiOutlineDown' is defined but never used.","React Hook useEffect has missing dependencies: 'course.category', 'course.courseDescription', 'course.courseName', 'course.instructions', 'course.price', 'course.tag', 'course.thumbnail', 'course.whatYouWillLearn', 'editCourse', and 'setValue'. Either include them or remove the dependency array.",["663"],["664"],"React Hook useEffect has missing dependencies: 'course?.status' and 'setValue'. Either include them or remove the dependency array.",["665"],"'course' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["666"],["667"],["668"],["669"],"React Hook useEffect has missing dependencies: 'course?.tag', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["670"],["671"],"React Hook useEffect has missing dependencies: 'name' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["672"],["673"],"React Hook useEffect has missing dependencies: 'course?.instructions', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["674"],["675"],["676"],["677"],"React Hook useEffect has missing dependencies: 'edit', 'modalData.description', 'modalData.title', 'modalData.videoUrl', 'setValue', and 'view'. Either include them or remove the dependency array.",["678"],{"desc":"679","fix":"680"},{"kind":"681","justification":"682"},{"desc":"683","fix":"684"},{"kind":"681","justification":"682"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"kind":"681","justification":"682"},{"desc":"687","fix":"689"},{"desc":"690","fix":"691"},{"desc":"683","fix":"692"},{"kind":"681","justification":"682"},{"desc":"693","fix":"694"},{"kind":"681","justification":"682"},{"desc":"695","fix":"696"},{"kind":"681","justification":"682"},{"desc":"697","fix":"698"},{"desc":"699","fix":"700"},{"kind":"681","justification":"682"},{"desc":"701","fix":"702"},{"desc":"703","fix":"704"},{"kind":"681","justification":"682"},{"desc":"705","fix":"706"},{"kind":"681","justification":"682"},{"desc":"707","fix":"708"},{"kind":"681","justification":"682"},{"desc":"709","fix":"710"},{"kind":"681","justification":"682"},{"desc":"711","fix":"712"},{"kind":"681","justification":"682"},{"desc":"713","fix":"714"},{"kind":"681","justification":"682"},{"desc":"715","fix":"716"},"Update the dependencies array to be: [navigate, signupData]",{"range":"717","text":"718"},"directive","","Update the dependencies array to be: [courseId, dispatch, token]",{"range":"719","text":"720"},"Update the dependencies array to be: [getEnrolledCourses]",{"range":"721","text":"722"},"Update the dependencies array to be: [token]",{"range":"723","text":"724"},{"range":"725","text":"724"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",{"range":"726","text":"727"},{"range":"728","text":"720"},"Update the dependencies array to be: [setValue]",{"range":"729","text":"730"},"Update the dependencies array to be: [courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",{"range":"731","text":"732"},"Update the dependencies array to be: [course._id, isActive]",{"range":"733","text":"734"},"Update the dependencies array to be: [course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",{"range":"735","text":"736"},"Update the dependencies array to be: [course?.status, setValue]",{"range":"737","text":"738"},"Update the dependencies array to be: [name, register]",{"range":"739","text":"740"},"Update the dependencies array to be: [name, selectedFile, setValue]",{"range":"741","text":"742"},"Update the dependencies array to be: [course?.tag, editCourse, name, register]",{"range":"743","text":"744"},"Update the dependencies array to be: [chips, name, setValue]",{"range":"745","text":"746"},"Update the dependencies array to be: [course?.instructions, editCourse, name, register]",{"range":"747","text":"748"},"Update the dependencies array to be: [name, requirementsList, setValue]",{"range":"749","text":"750"},"Update the dependencies array to be: [edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]",{"range":"751","text":"752"},[834,836],"[navigate, signupData]",[1439,1441],"[courseId, dispatch, token]",[824,826],"[getEnrolledCourses]",[822,824],"[token]",[1112,1114],[1933,1989],"[courseSectionData, courseEntireData, location.pathname, courseId, sectionId, subSectionId, navigate]",[1044,1046],[864,866],"[setValue]",[1447,1503],"[courseSectionData, courseEntireData, location.pathname, sectionId, subSectionId]",[434,444],"[course._id, isActive]",[2122,2124],"[course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",[946,948],"[course?.status, setValue]",[1390,1400],"[name, register]",[1526,1550],"[name, selectedFile, setValue]",[858,860],"[course?.tag, editCourse, name, register]",[979,986],"[chips, name, setValue]",[647,649],"[course?.instructions, editCourse, name, register]",[779,797],"[name, requirementsList, setValue]",[1299,1301],"[edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]"]