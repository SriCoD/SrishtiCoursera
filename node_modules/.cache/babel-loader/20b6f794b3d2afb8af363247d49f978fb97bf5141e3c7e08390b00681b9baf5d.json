{"ast":null,"code":"import{toast}from\"react-hot-toast\";import{setLoading,setToken}from\"../../slices/authSlice\";import{resetCart}from\"../../slices/cartSlice\";import{setUser}from\"../../slices/profileSlice\";import{apiConnector}from\"../apiconnector\";import{endpoints}from\"../apis\";const{SENDOTP_API,SIGNUP_API,LOGIN_API,RESETPASSTOKEN_API,RESETPASSWORD_API}=endpoints;export function sendOtp(email,navigate){return async dispatch=>{const toastId=toast.loading(\"Loading...\");dispatch(setLoading(true));try{const response=await apiConnector(\"POST\",SENDOTP_API,{email,checkUserPresent:true});console.log(\"SENDOTP API RESPONSE............\",response);console.log(response.data.success);if(!response.data.success){throw new Error(response.data.message);}toast.success(\"OTP Sent Successfully\");navigate(\"/verify-email\");}catch(error){console.log(\"SENDOTP API ERROR............\",error);toast.error(\"Could Not Send OTP\");}dispatch(setLoading(false));toast.dismiss(toastId);};}export function signUp(accountType,firstName,lastName,email,password,confirmPassword,otp,navigate){return async dispatch=>{const toastId=toast.loading(\"Loading...\");dispatch(setLoading(true));try{const response=await apiConnector(\"POST\",SIGNUP_API,{accountType,firstName,lastName,email,password,confirmPassword,otp});console.log(\"SIGNUP API RESPONSE............\",response);if(!response.data.success){throw new Error(response.data.message);}toast.success(\"Signup Successful\");navigate(\"/login\");}catch(error){console.log(\"SIGNUP API ERROR............\",error);toast.error(\"Signup Failed\");navigate(\"/signup\");}dispatch(setLoading(false));toast.dismiss(toastId);};}export function login(email,password,navigate){return async dispatch=>{const toastId=toast.loading(\"Loading...\");dispatch(setLoading(true));try{var _response$data,_response$data$user;const response=await apiConnector(\"POST\",LOGIN_API,{email,password});console.log(\"LOGIN API RESPONSE............\",response);if(!response.data.success){throw new Error(response.data.message);}toast.success(\"Login Successful\");dispatch(setToken(response.data.token));const userImage=(_response$data=response.data)!==null&&_response$data!==void 0&&(_response$data$user=_response$data.user)!==null&&_response$data$user!==void 0&&_response$data$user.image?response.data.user.image:\"https://api.dicebear.com/5.x/initials/svg?seed=\".concat(response.data.user.firstName,\" \").concat(response.data.user.lastName);dispatch(setUser({...response.data.user,image:userImage}));localStorage.setItem(\"token\",JSON.stringify(response.data.token));localStorage.setItem(\"user\",JSON.stringify(response.data.user));navigate(\"/dashboard/my-profile\");}catch(error){console.log(\"LOGIN API ERROR............\",error);toast.error(\"Login Failed\");}dispatch(setLoading(false));toast.dismiss(toastId);};}export function logout(navigate){return dispatch=>{dispatch(setToken(null));dispatch(setUser(null));dispatch(resetCart());localStorage.removeItem(\"token\");localStorage.removeItem(\"user\");toast.success(\"Logged Out\");navigate(\"/\");};}export function getPasswordResetToken(email,setEmailSent){return async dispatch=>{dispatch(setLoading(true));try{const response=await apiConnector(\"POST\",RESETPASSTOKEN_API,{email});console.log(\"RESET PASSWORD TOKEN RESPONSE....\",response);if(!response.data.success){throw new Error(response.data.message);}toast.success(\"Reset Email Sent\");setEmailSent(true);}catch(error){console.log(\"RESET PASSWORD TOKEN Error\",error);toast.error(\"Failed to send email for resetting password\");}dispatch(setLoading(false));};}export function resetPassword(password,confirmPassword,token){return async dispatch=>{dispatch(setLoading(true));try{const response=await apiConnector(\"POST\",RESETPASSWORD_API,{password,confirmPassword,token});console.log(\"RESET Password RESPONSE ... \",response);if(!response.data.success){throw new Error(response.data.message);}toast.success(\"Password has been reset successfully\");}catch(error){console.log(\"RESET PASSWORD TOKEN Error\",error);toast.error(\"Unable to reset password\");}dispatch(setLoading(false));};}","map":{"version":3,"names":["toast","setLoading","setToken","resetCart","setUser","apiConnector","endpoints","SENDOTP_API","SIGNUP_API","LOGIN_API","RESETPASSTOKEN_API","RESETPASSWORD_API","sendOtp","email","navigate","dispatch","toastId","loading","response","checkUserPresent","console","log","data","success","Error","message","error","dismiss","signUp","accountType","firstName","lastName","password","confirmPassword","otp","login","_response$data","_response$data$user","token","userImage","user","image","concat","localStorage","setItem","JSON","stringify","logout","removeItem","getPasswordResetToken","setEmailSent","resetPassword"],"sources":["C:/Users/s/Desktop/StudyNotion-An-Online-Education-Platform/src/services/operations/authAPI.js"],"sourcesContent":["import { toast } from \"react-hot-toast\"\r\n\r\nimport { setLoading, setToken } from \"../../slices/authSlice\"\r\nimport { resetCart } from \"../../slices/cartSlice\"\r\nimport { setUser } from \"../../slices/profileSlice\"\r\nimport { apiConnector } from \"../apiconnector\"\r\nimport { endpoints } from \"../apis\"\r\n\r\nconst {\r\n  SENDOTP_API,\r\n  SIGNUP_API,\r\n  LOGIN_API,\r\n  RESETPASSTOKEN_API,\r\n  RESETPASSWORD_API,\r\n} = endpoints\r\n\r\nexport function sendOtp(email, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", SENDOTP_API, {\r\n        email,\r\n        checkUserPresent: true,\r\n      })\r\n      console.log(\"SENDOTP API RESPONSE............\", response)\r\n\r\n      console.log(response.data.success)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"OTP Sent Successfully\")\r\n      navigate(\"/verify-email\")\r\n    } catch (error) {\r\n      console.log(\"SENDOTP API ERROR............\", error)\r\n      toast.error(\"Could Not Send OTP\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function signUp(\r\n  accountType,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  password,\r\n  confirmPassword,\r\n  otp,\r\n  navigate\r\n) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", SIGNUP_API, {\r\n        accountType,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        otp,\r\n      })\r\n\r\n      console.log(\"SIGNUP API RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n      toast.success(\"Signup Successful\")\r\n      navigate(\"/login\")\r\n    } catch (error) {\r\n      console.log(\"SIGNUP API ERROR............\", error)\r\n      toast.error(\"Signup Failed\")\r\n      navigate(\"/signup\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function login(email, password, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\")\r\n    dispatch(setLoading(true))\r\n    try {\r\n      const response = await apiConnector(\"POST\", LOGIN_API, {\r\n        email,\r\n        password,\r\n      })\r\n\r\n      console.log(\"LOGIN API RESPONSE............\", response)\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message)\r\n      }\r\n\r\n      toast.success(\"Login Successful\")\r\n      dispatch(setToken(response.data.token))\r\n      const userImage = response.data?.user?.image\r\n        ? response.data.user.image\r\n        : `https://api.dicebear.com/5.x/initials/svg?seed=${response.data.user.firstName} ${response.data.user.lastName}`\r\n      dispatch(setUser({ ...response.data.user, image: userImage }))\r\n      \r\n      localStorage.setItem(\"token\", JSON.stringify(response.data.token))\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user))\r\n      navigate(\"/dashboard/my-profile\")\r\n    } catch (error) {\r\n      console.log(\"LOGIN API ERROR............\", error)\r\n      toast.error(\"Login Failed\")\r\n    }\r\n    dispatch(setLoading(false))\r\n    toast.dismiss(toastId)\r\n  }\r\n}\r\n\r\nexport function logout(navigate) {\r\n  return (dispatch) => {\r\n    dispatch(setToken(null))\r\n    dispatch(setUser(null))\r\n    dispatch(resetCart())\r\n    localStorage.removeItem(\"token\")\r\n    localStorage.removeItem(\"user\")\r\n    toast.success(\"Logged Out\")\r\n    navigate(\"/\")\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function getPasswordResetToken(email , setEmailSent) {\r\n  return async(dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try{\r\n      const response = await apiConnector(\"POST\", RESETPASSTOKEN_API, {email,})\r\n\r\n      console.log(\"RESET PASSWORD TOKEN RESPONSE....\", response);\r\n\r\n      if(!response.data.success) {\r\n        throw new Error(response.data.message);\r\n      }\r\n\r\n      toast.success(\"Reset Email Sent\");\r\n      setEmailSent(true);\r\n    }\r\n    catch(error) {\r\n      console.log(\"RESET PASSWORD TOKEN Error\", error);\r\n      toast.error(\"Failed to send email for resetting password\");\r\n    }\r\n    dispatch(setLoading(false));\r\n  }\r\n}\r\n\r\nexport function resetPassword(password, confirmPassword, token) {\r\n  return async(dispatch) => {\r\n    dispatch(setLoading(true));\r\n    try{\r\n      const response = await apiConnector(\"POST\", RESETPASSWORD_API, {password, confirmPassword, token});\r\n\r\n      console.log(\"RESET Password RESPONSE ... \", response);\r\n\r\n\r\n      if(!response.data.success) {\r\n        throw new Error(response.data.message);\r\n      }\r\n\r\n      toast.success(\"Password has been reset successfully\");\r\n    }\r\n    catch(error) {\r\n      console.log(\"RESET PASSWORD TOKEN Error\", error);\r\n      toast.error(\"Unable to reset password\");\r\n    }\r\n    dispatch(setLoading(false));\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}