{"ast":null,"code":"import{useState}from\"react\";import{Chart,registerables}from\"chart.js\";import{Pie}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(...registerables);export default function InstructorChart(_ref){let{courses}=_ref;// State to keep track of the currently selected chart\nconst[currChart,setCurrChart]=useState(\"students\");// Function to generate random colors for the chart\nconst generateRandomColors=numColors=>{const colors=[];for(let i=0;i<numColors;i++){const color=\"rgb(\".concat(Math.floor(Math.random()*256),\", \").concat(Math.floor(Math.random()*256),\", \").concat(Math.floor(Math.random()*256),\")\");colors.push(color);}return colors;};// Data for the chart displaying student information\nconst chartDataStudents={labels:courses.map(course=>course.courseName),datasets:[{data:courses.map(course=>course.totalStudentsEnrolled),backgroundColor:generateRandomColors(courses.length)}]};// Data for the chart displaying income information\nconst chartIncomeData={labels:courses.map(course=>course.courseName),datasets:[{data:courses.map(course=>course.totalAmountGenerated),backgroundColor:generateRandomColors(courses.length)}]};// Options for the chart\nconst options={maintainAspectRatio:false};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-bold text-richblack-5\",children:\"Visualize\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-4 font-semibold\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrChart(\"students\"),className:\"rounded-sm p-1 px-3 transition-all duration-200 \".concat(currChart===\"students\"?\"bg-richblack-700 text-yellow-50\":\"text-yellow-400\"),children:\"Students\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrChart(\"income\"),className:\"rounded-sm p-1 px-3 transition-all duration-200 \".concat(currChart===\"income\"?\"bg-richblack-700 text-yellow-50\":\"text-yellow-400\"),children:\"Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"relative mx-auto aspect-square h-full w-full\",children:/*#__PURE__*/_jsx(Pie,{data:currChart===\"students\"?chartDataStudents:chartIncomeData,options:options})})]});}","map":{"version":3,"names":["useState","Chart","registerables","Pie","jsx","_jsx","jsxs","_jsxs","register","InstructorChart","_ref","courses","currChart","setCurrChart","generateRandomColors","numColors","colors","i","color","concat","Math","floor","random","push","chartDataStudents","labels","map","course","courseName","datasets","data","totalStudentsEnrolled","backgroundColor","length","chartIncomeData","totalAmountGenerated","options","maintainAspectRatio","className","children","onClick"],"sources":["C:/Users/s/Desktop/StudyNotion-An-Online-Education-Platform/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport { Chart, registerables } from \"chart.js\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nChart.register(...registerables)\r\n\r\nexport default function InstructorChart({ courses }) {\r\n  // State to keep track of the currently selected chart\r\n  const [currChart, setCurrChart] = useState(\"students\")\r\n\r\n  // Function to generate random colors for the chart\r\n  const generateRandomColors = (numColors) => {\r\n    const colors = []\r\n    for (let i = 0; i < numColors; i++) {\r\n      const color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n        Math.random() * 256\r\n      )}, ${Math.floor(Math.random() * 256)})`\r\n      colors.push(color)\r\n    }\r\n    return colors\r\n  }\r\n\r\n  // Data for the chart displaying student information\r\n  const chartDataStudents = {\r\n    labels: courses.map((course) => course.courseName),\r\n    datasets: [\r\n      {\r\n        data: courses.map((course) => course.totalStudentsEnrolled),\r\n        backgroundColor: generateRandomColors(courses.length),\r\n      },\r\n    ],\r\n  }\r\n\r\n  // Data for the chart displaying income information\r\n  const chartIncomeData = {\r\n    labels: courses.map((course) => course.courseName),\r\n    datasets: [\r\n      {\r\n        data: courses.map((course) => course.totalAmountGenerated),\r\n        backgroundColor: generateRandomColors(courses.length),\r\n      },\r\n    ],\r\n  }\r\n\r\n  // Options for the chart\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\">\r\n      <p className=\"text-lg font-bold text-richblack-5\">Visualize</p>\r\n      <div className=\"space-x-4 font-semibold\">\r\n        {/* Button to switch to the \"students\" chart */}\r\n        <button\r\n          onClick={() => setCurrChart(\"students\")}\r\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\r\n            currChart === \"students\"\r\n              ? \"bg-richblack-700 text-yellow-50\"\r\n              : \"text-yellow-400\"\r\n          }`}\r\n        >\r\n          Students\r\n        </button>\r\n        {/* Button to switch to the \"income\" chart */}\r\n        <button\r\n          onClick={() => setCurrChart(\"income\")}\r\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\r\n            currChart === \"income\"\r\n              ? \"bg-richblack-700 text-yellow-50\"\r\n              : \"text-yellow-400\"\r\n          }`}\r\n        >\r\n          Income\r\n        </button>\r\n      </div>\r\n      <div className=\"relative mx-auto aspect-square h-full w-full\">\r\n        {/* Render the Pie chart based on the selected chart */}\r\n        <Pie\r\n          data={currChart === \"students\" ? chartDataStudents : chartIncomeData}\r\n          options={options}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}